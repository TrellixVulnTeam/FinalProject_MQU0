{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-spinner\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"@angular/router\"; //Update Unit\n\nexport let UnitService = /*#__PURE__*/(() => {\n  class UnitService {\n    constructor(http, spinner, toastr, router) {\n      this.http = http;\n      this.spinner = spinner;\n      this.toastr = toastr;\n      this.router = router;\n      this.headers = new HttpHeaders({\n        'Content-Type': 'application/JSON'\n      });\n      this.section = [{}];\n      this.units = [{}];\n      this.sectionID = 0;\n    }\n\n    reloadComponent() {\n      let currentUrl = this.router.url;\n\n      this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n\n      this.router.onSameUrlNavigation = 'reload';\n      this.router.navigate([currentUrl]);\n    }\n\n    getAllTrainerSectionUnit(SectionId) {\n      this.spinner.show();\n      this.http.post(environment.apiUrl + 'Section/ReturnSectionUnits/' + SectionId, null).subscribe(res => {\n        if (res.length == 0) {\n          this.units = null;\n        } else {\n          this.units = res;\n        }\n\n        this.spinner.hide();\n      }, err => {\n        this.toastr.warning('Something wrong');\n      });\n    }\n\n    insertUnit(unit) {\n      debugger;\n      this.spinner.show();\n      this.http.post(environment.apiUrl + 'Section/InsertUnit', unit).subscribe(res => {\n        this.units = res;\n        debugger;\n        this.spinner.hide();\n        this.reloadComponent();\n      }, err => {\n        this.spinner.hide();\n        this.reloadComponent();\n        debugger;\n        this.toastr.warning('Something wrong');\n      });\n    }\n\n  }\n\n  UnitService.ɵfac = function UnitService_Factory(t) {\n    return new (t || UnitService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.NgxSpinnerService), i0.ɵɵinject(i3.ToastrService), i0.ɵɵinject(i4.Router));\n  };\n\n  UnitService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UnitService,\n    factory: UnitService.ɵfac,\n    providedIn: 'root'\n  });\n  return UnitService;\n})();","map":null,"metadata":{},"sourceType":"module"}