{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nfunction NgxProgressBarComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.value, \"%\");\n  }\n}\n\nfunction NgxProgressCircleComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.valueLabel);\n  }\n}\n\nfunction NgxProgressCircleComponent_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.value);\n  }\n}\n\nfunction NgxProgressCircleComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵprojection(1);\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = [[[\"\", \"icon-value-label\", \"\"]]];\nconst _c1 = [\"[icon-value-label]\"];\nlet NgxProgressBarComponent = /*#__PURE__*/(() => {\n  class NgxProgressBarComponent {\n    constructor() {\n      this.value = 0;\n      this.showValue = true;\n      this.translate = 'translateX(0%)';\n    }\n\n    ngOnChanges(changes) {\n      this.translate = `translateX(${changes.value.currentValue}%)`;\n    }\n\n  }\n\n  NgxProgressBarComponent.ɵfac = function NgxProgressBarComponent_Factory(t) {\n    return new (t || NgxProgressBarComponent)();\n  };\n\n  NgxProgressBarComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgxProgressBarComponent,\n    selectors: [[\"ngx-progress-bar\"]],\n    inputs: {\n      value: \"value\",\n      showValue: \"showValue\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 3,\n    vars: 4,\n    consts: [[1, \"ngx-progress-bar\"], [\"role\", \"progressbar\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 1, \"ngx-progress-bar__inner\"], [\"class\", \"ngx-progress-bar__value\", 4, \"ngIf\"], [1, \"ngx-progress-bar__value\"]],\n    template: function NgxProgressBarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"div\", 1);\n        i0.ɵɵtemplate(2, NgxProgressBarComponent_div_2_Template, 2, 1, \"div\", 2);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"transform\", ctx.translate);\n        i0.ɵɵattribute(\"aria.valuenow\", ctx.value);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showValue);\n      }\n    },\n    directives: [i1.NgIf],\n    styles: [\"*,:after,:before{box-sizing:border-box}ngx-progress-bar{display:block;--color-bar:#3d3d3d;--color-value:#ccc;--color-inset-background:#f5f5f5;--inner-shadow:inset 0 1px 2px #0000001a}.ngx-progress-bar{width:100%;height:20px;background:#f5f5f5;background:var(--color-inset-background);border-radius:2px;position:relative;overflow:hidden;text-align:center;box-shadow:inset 0 1px 2px #0000001a;box-shadow:var(--inner-shadow);padding:2px;margin-bottom:4px}.ngx-progress-bar__inner{width:100%;height:100%;background:#3d3d3d;background:var(--color-bar);position:absolute;top:0;left:-100%;text-align:center;line-height:35px;font-size:1em;will-change:transform;transition:transform .1s ease-in}.ngx-progress-bar__value{color:#ccc;color:var(--color-value);z-index:2;position:absolute;text-align:center;left:0;right:0;top:-1px}\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NgxProgressBarComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NgxProgressCircleComponent = /*#__PURE__*/(() => {\n  class NgxProgressCircleComponent {\n    constructor() {\n      this.value = 0;\n      this.symbol = '%';\n      this.label = 'complete';\n      this.valueLabel = '';\n      this.radius = 74;\n      this.circumference = 2 * Math.PI * this.radius;\n      this.dashoffset = 0;\n      this.progress(0);\n    }\n\n    ngOnChanges(changes) {\n      this.progress(changes.value.currentValue);\n    }\n\n    progress(value) {\n      const progress = value / 100;\n      this.dashoffset = this.circumference * (1 - progress);\n    }\n\n  }\n\n  NgxProgressCircleComponent.ɵfac = function NgxProgressCircleComponent_Factory(t) {\n    return new (t || NgxProgressCircleComponent)();\n  };\n\n  NgxProgressCircleComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgxProgressCircleComponent,\n    selectors: [[\"ngx-progress-circle\"]],\n    inputs: {\n      value: \"value\",\n      symbol: \"symbol\",\n      label: \"label\",\n      valueLabel: \"valueLabel\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c1,\n    decls: 11,\n    vars: 11,\n    consts: [[1, \"ngx-progress-circle\"], [\"width\", \"170\", \"height\", \"170\", \"viewBox\", \"0 0 170 170\", 1, \"ngx-progress-circle__svg\"], [\"cx\", \"84\", \"cy\", \"84\", \"stroke-width\", \"16\", 1, \"ngx-progress-circle__svg__meter\"], [\"cx\", \"84\", \"cy\", \"84\", \"stroke-width\", \"16\", 1, \"ngx-progress-circle__svg__value\"], [1, \"ngx-progress-circle__value\"], [4, \"ngIf\"], [\"class\", \"ngx-progress-circle__value ng-content\", 4, \"ngIf\"], [1, \"ngx-progress-circle__complete\"], [1, \"ngx-progress-circle__value\", \"ng-content\"]],\n    template: function NgxProgressCircleComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c0);\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(1, \"svg\", 1);\n        i0.ɵɵelement(2, \"circle\", 2);\n        i0.ɵɵelement(3, \"circle\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵnamespaceHTML();\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵtemplate(5, NgxProgressCircleComponent_ng_container_5_Template, 2, 1, \"ng-container\", 5);\n        i0.ɵɵtemplate(6, NgxProgressCircleComponent_ng_container_6_Template, 2, 1, \"ng-container\", 5);\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, NgxProgressCircleComponent_div_8_Template, 2, 0, \"div\", 6);\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵtext(10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵattribute(\"r\", ctx.radius);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"stroke-dasharray\", ctx.circumference)(\"stroke-dashoffset\", ctx.dashoffset);\n        i0.ɵɵattribute(\"r\", ctx.radius);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.valueLabel !== null);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.valueLabel === null);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"\", ctx.symbol, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.valueLabel);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.label);\n      }\n    },\n    directives: [i1.NgIf],\n    styles: [\"*,:after,:before{box-sizing:border-box}ngx-progress-circle{display:inline-block;--color-stroke:#3d3d3d;--color-circle:#f2f2f2}.ngx-progress-circle{position:relative;width:170px;height:170px;margin:0 auto}.ngx-progress-circle__svg{transform:rotate(-90deg)}.ngx-progress-circle__svg__meter,.ngx-progress-circle__svg__value{fill:none}.ngx-progress-circle__svg__meter{stroke:#f2f2f2;stroke:var(--color-circle)}.ngx-progress-circle__svg__value{stroke:#3d3d3d;stroke:var(--color-stroke);stroke-linecap:round;transition:all}.ngx-progress-circle__value{position:absolute;top:62px;text-align:center;font-size:2.7em;width:100%}.ngx-progress-circle__value.ng-content{top:50px}.ngx-progress-circle__complete{font-size:1.1em;position:absolute;text-align:center;width:100%;top:96px}\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NgxProgressCircleComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NgxProgressModule = /*#__PURE__*/(() => {\n  class NgxProgressModule {}\n\n  NgxProgressModule.ɵfac = function NgxProgressModule_Factory(t) {\n    return new (t || NgxProgressModule)();\n  };\n\n  NgxProgressModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NgxProgressModule\n  });\n  NgxProgressModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return NgxProgressModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\r\n * Public API Surface of ngx-progress\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { NgxProgressBarComponent, NgxProgressCircleComponent, NgxProgressModule }; //# sourceMappingURL=ngx-lite-progress.js.map","map":null,"metadata":{},"sourceType":"module"}