{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nfunction NgxProgressBarComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.value, \"%\");\n  }\n}\n\nfunction NgxProgressCircleComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.valueLabel);\n  }\n}\n\nfunction NgxProgressCircleComponent_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.value);\n  }\n}\n\nfunction NgxProgressCircleComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵprojection(1);\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = [[[\"\", \"icon-value-label\", \"\"]]];\nconst _c1 = [\"[icon-value-label]\"];\n\nclass NgxProgressBarComponent {\n  constructor() {\n    this.value = 0;\n    this.showValue = true;\n    this.translate = 'translateX(0%)';\n  }\n\n  ngOnChanges(changes) {\n    this.translate = `translateX(${changes.value.currentValue}%)`;\n  }\n\n}\n\nNgxProgressBarComponent.ɵfac = function NgxProgressBarComponent_Factory(t) {\n  return new (t || NgxProgressBarComponent)();\n};\n\nNgxProgressBarComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgxProgressBarComponent,\n  selectors: [[\"ngx-progress-bar\"]],\n  inputs: {\n    value: \"value\",\n    showValue: \"showValue\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 4,\n  consts: [[1, \"ngx-progress-bar\"], [\"role\", \"progressbar\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 1, \"ngx-progress-bar__inner\"], [\"class\", \"ngx-progress-bar__value\", 4, \"ngIf\"], [1, \"ngx-progress-bar__value\"]],\n  template: function NgxProgressBarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"div\", 1);\n      i0.ɵɵtemplate(2, NgxProgressBarComponent_div_2_Template, 2, 1, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"transform\", ctx.translate);\n      i0.ɵɵattribute(\"aria.valuenow\", ctx.value);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showValue);\n    }\n  },\n  directives: [i1.NgIf],\n  styles: [\"*,:after,:before{box-sizing:border-box}ngx-progress-bar{display:block;--color-bar:#3d3d3d;--color-value:#ccc;--color-inset-background:#f5f5f5;--inner-shadow:inset 0 1px 2px #0000001a}.ngx-progress-bar{width:100%;height:20px;background:#f5f5f5;background:var(--color-inset-background);border-radius:2px;position:relative;overflow:hidden;text-align:center;box-shadow:inset 0 1px 2px #0000001a;box-shadow:var(--inner-shadow);padding:2px;margin-bottom:4px}.ngx-progress-bar__inner{width:100%;height:100%;background:#3d3d3d;background:var(--color-bar);position:absolute;top:0;left:-100%;text-align:center;line-height:35px;font-size:1em;will-change:transform;transition:transform .1s ease-in}.ngx-progress-bar__value{color:#ccc;color:var(--color-value);z-index:2;position:absolute;text-align:center;left:0;right:0;top:-1px}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxProgressBarComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-progress-bar',\n      templateUrl: './ngx-progress-bar.component.html',\n      styleUrls: ['./ngx-progress-bar.component.scss'],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    value: [{\n      type: Input\n    }],\n    showValue: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NgxProgressCircleComponent {\n  constructor() {\n    this.value = 0;\n    this.symbol = '%';\n    this.label = 'complete';\n    this.valueLabel = '';\n    this.radius = 74;\n    this.circumference = 2 * Math.PI * this.radius;\n    this.dashoffset = 0;\n    this.progress(0);\n  }\n\n  ngOnChanges(changes) {\n    this.progress(changes.value.currentValue);\n  }\n\n  progress(value) {\n    const progress = value / 100;\n    this.dashoffset = this.circumference * (1 - progress);\n  }\n\n}\n\nNgxProgressCircleComponent.ɵfac = function NgxProgressCircleComponent_Factory(t) {\n  return new (t || NgxProgressCircleComponent)();\n};\n\nNgxProgressCircleComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgxProgressCircleComponent,\n  selectors: [[\"ngx-progress-circle\"]],\n  inputs: {\n    value: \"value\",\n    symbol: \"symbol\",\n    label: \"label\",\n    valueLabel: \"valueLabel\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c1,\n  decls: 11,\n  vars: 11,\n  consts: [[1, \"ngx-progress-circle\"], [\"width\", \"170\", \"height\", \"170\", \"viewBox\", \"0 0 170 170\", 1, \"ngx-progress-circle__svg\"], [\"cx\", \"84\", \"cy\", \"84\", \"stroke-width\", \"16\", 1, \"ngx-progress-circle__svg__meter\"], [\"cx\", \"84\", \"cy\", \"84\", \"stroke-width\", \"16\", 1, \"ngx-progress-circle__svg__value\"], [1, \"ngx-progress-circle__value\"], [4, \"ngIf\"], [\"class\", \"ngx-progress-circle__value ng-content\", 4, \"ngIf\"], [1, \"ngx-progress-circle__complete\"], [1, \"ngx-progress-circle__value\", \"ng-content\"]],\n  template: function NgxProgressCircleComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c0);\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"svg\", 1);\n      i0.ɵɵelement(2, \"circle\", 2);\n      i0.ɵɵelement(3, \"circle\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵnamespaceHTML();\n      i0.ɵɵelementStart(4, \"div\", 4);\n      i0.ɵɵtemplate(5, NgxProgressCircleComponent_ng_container_5_Template, 2, 1, \"ng-container\", 5);\n      i0.ɵɵtemplate(6, NgxProgressCircleComponent_ng_container_6_Template, 2, 1, \"ng-container\", 5);\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, NgxProgressCircleComponent_div_8_Template, 2, 0, \"div\", 6);\n      i0.ɵɵelementStart(9, \"div\", 7);\n      i0.ɵɵtext(10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵattribute(\"r\", ctx.radius);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"stroke-dasharray\", ctx.circumference)(\"stroke-dashoffset\", ctx.dashoffset);\n      i0.ɵɵattribute(\"r\", ctx.radius);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.valueLabel !== null);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.valueLabel === null);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"\", ctx.symbol, \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.valueLabel);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.label);\n    }\n  },\n  directives: [i1.NgIf],\n  styles: [\"*,:after,:before{box-sizing:border-box}ngx-progress-circle{display:inline-block;--color-stroke:#3d3d3d;--color-circle:#f2f2f2}.ngx-progress-circle{position:relative;width:170px;height:170px;margin:0 auto}.ngx-progress-circle__svg{transform:rotate(-90deg)}.ngx-progress-circle__svg__meter,.ngx-progress-circle__svg__value{fill:none}.ngx-progress-circle__svg__meter{stroke:#f2f2f2;stroke:var(--color-circle)}.ngx-progress-circle__svg__value{stroke:#3d3d3d;stroke:var(--color-stroke);stroke-linecap:round;transition:all}.ngx-progress-circle__value{position:absolute;top:62px;text-align:center;font-size:2.7em;width:100%}.ngx-progress-circle__value.ng-content{top:50px}.ngx-progress-circle__complete{font-size:1.1em;position:absolute;text-align:center;width:100%;top:96px}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxProgressCircleComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-progress-circle',\n      templateUrl: './ngx-progress-circle.component.html',\n      styleUrls: ['./ngx-progress-circle.component.scss'],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [];\n  }, {\n    value: [{\n      type: Input\n    }],\n    symbol: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    valueLabel: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NgxProgressModule {}\n\nNgxProgressModule.ɵfac = function NgxProgressModule_Factory(t) {\n  return new (t || NgxProgressModule)();\n};\n\nNgxProgressModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgxProgressModule\n});\nNgxProgressModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxProgressModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [NgxProgressBarComponent, NgxProgressCircleComponent],\n      exports: [NgxProgressBarComponent, NgxProgressCircleComponent]\n    }]\n  }], null, null);\n})();\n/*\n * Public API Surface of ngx-progress\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NgxProgressBarComponent, NgxProgressCircleComponent, NgxProgressModule };","map":{"version":3,"sources":["C:/Users/khale/Desktop/LMS.Angular/node_modules/@ngx-lite/progress/fesm2015/ngx-lite-progress.js"],"names":["i0","Component","ViewEncapsulation","ChangeDetectionStrategy","Input","NgModule","i1","CommonModule","NgxProgressBarComponent","constructor","value","showValue","translate","ngOnChanges","changes","currentValue","ɵfac","ɵcmp","NgIf","type","args","selector","templateUrl","styleUrls","encapsulation","None","changeDetection","OnPush","NgxProgressCircleComponent","symbol","label","valueLabel","radius","circumference","Math","PI","dashoffset","progress","NgxProgressModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nclass NgxProgressBarComponent {\n    constructor() {\n        this.value = 0;\n        this.showValue = true;\n        this.translate = 'translateX(0%)';\n    }\n    ngOnChanges(changes) {\n        this.translate = `translateX(${changes.value.currentValue}%)`;\n    }\n}\nNgxProgressBarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.2\", ngImport: i0, type: NgxProgressBarComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNgxProgressBarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.2\", type: NgxProgressBarComponent, selector: \"ngx-progress-bar\", inputs: { value: \"value\", showValue: \"showValue\" }, usesOnChanges: true, ngImport: i0, template: \"<div class=\\\"ngx-progress-bar\\\">\\n  <div [style.transform]=\\\"translate\\\" class=\\\"ngx-progress-bar__inner\\\" role=\\\"progressbar\\\" [attr.aria.valuenow]=\\\"value\\\" aria-valuemin=\\\"0\\\"\\n    aria-valuemax=\\\"100\\\"></div>\\n  <div *ngIf=\\\"showValue\\\" class=\\\"ngx-progress-bar__value\\\">{{value}}%</div>\\n</div>\", styles: [\"*,:after,:before{box-sizing:border-box}ngx-progress-bar{display:block;--color-bar:#3d3d3d;--color-value:#ccc;--color-inset-background:#f5f5f5;--inner-shadow:inset 0 1px 2px #0000001a}.ngx-progress-bar{width:100%;height:20px;background:#f5f5f5;background:var(--color-inset-background);border-radius:2px;position:relative;overflow:hidden;text-align:center;box-shadow:inset 0 1px 2px #0000001a;box-shadow:var(--inner-shadow);padding:2px;margin-bottom:4px}.ngx-progress-bar__inner{width:100%;height:100%;background:#3d3d3d;background:var(--color-bar);position:absolute;top:0;left:-100%;text-align:center;line-height:35px;font-size:1em;will-change:transform;transition:transform .1s ease-in}.ngx-progress-bar__value{color:#ccc;color:var(--color-value);z-index:2;position:absolute;text-align:center;left:0;right:0;top:-1px}\"], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.2\", ngImport: i0, type: NgxProgressBarComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-progress-bar',\n                    templateUrl: './ngx-progress-bar.component.html',\n                    styleUrls: ['./ngx-progress-bar.component.scss'],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], propDecorators: { value: [{\n                type: Input\n            }], showValue: [{\n                type: Input\n            }] } });\n\nclass NgxProgressCircleComponent {\n    constructor() {\n        this.value = 0;\n        this.symbol = '%';\n        this.label = 'complete';\n        this.valueLabel = '';\n        this.radius = 74;\n        this.circumference = 2 * Math.PI * this.radius;\n        this.dashoffset = 0;\n        this.progress(0);\n    }\n    ngOnChanges(changes) {\n        this.progress(changes.value.currentValue);\n    }\n    progress(value) {\n        const progress = value / 100;\n        this.dashoffset = this.circumference * (1 - progress);\n    }\n}\nNgxProgressCircleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.2\", ngImport: i0, type: NgxProgressCircleComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNgxProgressCircleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.2\", type: NgxProgressCircleComponent, selector: \"ngx-progress-circle\", inputs: { value: \"value\", symbol: \"symbol\", label: \"label\", valueLabel: \"valueLabel\" }, usesOnChanges: true, ngImport: i0, template: \"<div class=\\\"ngx-progress-circle\\\">\\n  <svg class=\\\"ngx-progress-circle__svg\\\" width=\\\"170\\\" height=\\\"170\\\" viewBox=\\\"0 0 170 170\\\">\\n    <circle class=\\\"ngx-progress-circle__svg__meter\\\" cx=\\\"84\\\" cy=\\\"84\\\" [attr.r]=\\\"radius\\\" stroke-width=\\\"16\\\" />\\n    <circle class=\\\"ngx-progress-circle__svg__value\\\" [style.strokeDasharray]=\\\"circumference\\\" [style.strokeDashoffset]=\\\"dashoffset\\\"\\n      cx=\\\"84\\\" cy=\\\"84\\\" [attr.r]=\\\"radius\\\" stroke-width=\\\"16\\\" />\\n  </svg>\\n\\n  <div class=\\\"ngx-progress-circle__value\\\">\\n    <ng-container *ngIf=\\\"valueLabel !== null\\\">{{valueLabel}}</ng-container>\\n    <ng-container *ngIf=\\\"valueLabel === null\\\">{{value}}</ng-container>{{symbol}}\\n  </div>\\n\\n  <div *ngIf=\\\"!valueLabel\\\" class=\\\"ngx-progress-circle__value ng-content\\\">\\n    <ng-content select=\\\"[icon-value-label]\\\"></ng-content>\\n  </div>\\n\\n  <div class=\\\"ngx-progress-circle__complete\\\">{{label}}</div>\\n</div>\\n\", styles: [\"*,:after,:before{box-sizing:border-box}ngx-progress-circle{display:inline-block;--color-stroke:#3d3d3d;--color-circle:#f2f2f2}.ngx-progress-circle{position:relative;width:170px;height:170px;margin:0 auto}.ngx-progress-circle__svg{transform:rotate(-90deg)}.ngx-progress-circle__svg__meter,.ngx-progress-circle__svg__value{fill:none}.ngx-progress-circle__svg__meter{stroke:#f2f2f2;stroke:var(--color-circle)}.ngx-progress-circle__svg__value{stroke:#3d3d3d;stroke:var(--color-stroke);stroke-linecap:round;transition:all}.ngx-progress-circle__value{position:absolute;top:62px;text-align:center;font-size:2.7em;width:100%}.ngx-progress-circle__value.ng-content{top:50px}.ngx-progress-circle__complete{font-size:1.1em;position:absolute;text-align:center;width:100%;top:96px}\"], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.2\", ngImport: i0, type: NgxProgressCircleComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-progress-circle',\n                    templateUrl: './ngx-progress-circle.component.html',\n                    styleUrls: ['./ngx-progress-circle.component.scss'],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { value: [{\n                type: Input\n            }], symbol: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], valueLabel: [{\n                type: Input\n            }] } });\n\nclass NgxProgressModule {\n}\nNgxProgressModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.2\", ngImport: i0, type: NgxProgressModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgxProgressModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.2\", ngImport: i0, type: NgxProgressModule, declarations: [NgxProgressBarComponent, NgxProgressCircleComponent], imports: [CommonModule], exports: [NgxProgressBarComponent, NgxProgressCircleComponent] });\nNgxProgressModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.2\", ngImport: i0, type: NgxProgressModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.2\", ngImport: i0, type: NgxProgressModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [NgxProgressBarComponent, NgxProgressCircleComponent],\n                    exports: [NgxProgressBarComponent, NgxProgressCircleComponent],\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-progress\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgxProgressBarComponent, NgxProgressCircleComponent, NgxProgressModule };\n"]},"metadata":{},"sourceType":"module"}