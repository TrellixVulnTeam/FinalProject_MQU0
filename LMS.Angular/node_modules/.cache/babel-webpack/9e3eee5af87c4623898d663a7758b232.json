{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Service/section.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/button\";\n\nfunction TaskMarkComponent_mat_error_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Mark is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let TaskMarkComponent = /*#__PURE__*/(() => {\n  class TaskMarkComponent {\n    constructor(data, Mysections) {\n      this.data = data;\n      this.Mysections = Mysections;\n      this.formGroup = new FormGroup({\n        Note: new FormControl(''),\n        Mark: new FormControl('', [Validators.required])\n      });\n    }\n\n    ngOnInit() {\n      this.currentTaskId = this.data;\n    } //Last Update En Shaa Allah\n\n\n    Create() {\n      const obj = {\n        traineeSectionTaskId: this.currentTaskId,\n        mark: this.formGroup.value.Mark,\n        trainerNote: this.formGroup.value.Note\n      };\n      this.Mysections.InsertTaskMarkForTrainee(obj);\n    }\n\n  }\n\n  TaskMarkComponent.ɵfac = function TaskMarkComponent_Factory(t) {\n    return new (t || TaskMarkComponent)(i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i1.SectionService));\n  };\n\n  TaskMarkComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TaskMarkComponent,\n    selectors: [[\"app-task-mark\"]],\n    decls: 19,\n    vars: 4,\n    consts: [[\"mat-dialog-title\", \"\"], [1, \"mat-typography\"], [1, \"form\", 2, \"margin-top\", \"50px\"], [3, \"formGroup\"], [\"appearance\", \"fill\", 1, \"example-full-width\"], [\"type\", \"number\", \"matInput\", \"\", \"formControlName\", \"Mark\"], [4, \"ngIf\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"Note\"], [\"align\", \"end\"], [\"mat-button\", \"\", \"mat-dialog-close\", \"\"], [\"mat-button\", \"\", \"cdkFocusInitial\", \"\", 3, \"mat-dialog-close\", \"disabled\"]],\n    template: function TaskMarkComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\", 0);\n        i0.ɵɵtext(1, \"Create exam \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"mat-dialog-content\", 1);\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"form\", 3);\n        i0.ɵɵelementStart(5, \"mat-form-field\", 4);\n        i0.ɵɵelementStart(6, \"mat-label\");\n        i0.ɵɵtext(7, \"Mark \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 5);\n        i0.ɵɵtemplate(9, TaskMarkComponent_mat_error_9_Template, 4, 0, \"mat-error\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"mat-form-field\", 4);\n        i0.ɵɵelementStart(11, \"mat-label\");\n        i0.ɵɵtext(12, \"Note\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"mat-dialog-actions\", 8);\n        i0.ɵɵelementStart(15, \"button\", 9);\n        i0.ɵɵtext(16, \"Cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"button\", 10);\n        i0.ɵɵtext(18, \"Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.formGroup.controls.Mark.hasError(\"required\"));\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"mat-dialog-close\", true)(\"disabled\", !ctx.formGroup.valid);\n      }\n    },\n    directives: [i2.MatDialogTitle, i2.MatDialogContent, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i4.MatFormField, i4.MatLabel, i3.NumberValueAccessor, i5.MatInput, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i6.NgIf, i2.MatDialogActions, i7.MatButton, i2.MatDialogClose, i4.MatError],\n    styles: [\"\"]\n  });\n  return TaskMarkComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}