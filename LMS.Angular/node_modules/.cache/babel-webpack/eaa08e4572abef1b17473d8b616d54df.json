{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/material/dialog\";\nexport let TrainerService = /*#__PURE__*/(() => {\n  class TrainerService {\n    constructor(http, toastr, dialog) {\n      this.http = http;\n      this.toastr = toastr;\n      this.dialog = dialog;\n      this.dtOptions = [{}];\n      this.trainer = [{}];\n      this.top4Trainer = [];\n      this.employee = [];\n    }\n\n    getTrainer() {\n      debugger; //  this.spinner.show();\n\n      this.http.post(environment.apiUrl + 'Employee/GetAllEmployess/0', 0).subscribe(res => {\n        debugger; // this.spinner.hide();\n\n        debugger;\n        console.log(res);\n        this.trainer = res;\n        this.top4Trainer = res.slice(0, 4); // console.log( \"test\",this.courses)\n        // this.toastr.success('Data Retrived !!!');\n      }, err => {// this.spinner.hide();\n        // this.toastr.warning('Something wrong');\n      });\n      debugger;\n    }\n\n    AddTrainer(emp) {\n      debugger;\n      this.http.post(environment.apiUrl + 'Employee/AddNewEmployee', emp).subscribe(res => {\n        debugger; // this.spiner.hide();\n\n        this.toastr.success('Trainer Created successfully !!!');\n      }, err => {\n        // this.spiner.hide();\n        this.toastr.error('Something Wrong, Try Again!');\n      });\n    } //add put when delet/\n\n\n    DeleteTrainer(empId) {\n      debugger;\n      this.http.put(environment.apiUrl + 'Employee/DeleteEmployee/' + empId, empId).subscribe(res => {\n        debugger; // this.spiner.hide();\n\n        this.toastr.success('Trainer Deleted successfully !!!');\n        window.location.reload();\n      }, err => {\n        // this.spiner.hide();\n        this.toastr.error('Something Wrong, Try Again!');\n      });\n    }\n\n    EditTrainer(emp) {\n      debugger;\n      this.http.put(environment.apiUrl + 'Employee/UpdateEmployee', emp).subscribe(res => {\n        // this.spiner.hide();\n        this.toastr.success('Trainer Edit successfully !!!');\n        window.location.reload();\n      }, err => {\n        // this.spiner.hide();\n        this.toastr.error('Something Wrong, Try Again!');\n      });\n    }\n\n    EditStatus(emp) {\n      debugger;\n      this.http.put(environment.apiUrl + 'Employee/ChangeTrainerStatus/' + emp, emp).subscribe(res => {\n        debugger; // this.spiner.hide();\n\n        this.toastr.success('Edit Status Trainer successfully !!!');\n        window.location.reload();\n      }, err => {\n        // this.spiner.hide();\n        this.toastr.error('Something Wrong, Try Again!');\n      });\n    }\n\n    ReturnEmployeeInfo(employeeId) {\n      this.http.post(environment.apiUrl + 'Employee/ReturnEmployeeInfo/' + employeeId, employeeId).subscribe(res => {\n        this.employee = res;\n      });\n    }\n\n  }\n\n  TrainerService.ɵfac = function TrainerService_Factory(t) {\n    return new (t || TrainerService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ToastrService), i0.ɵɵinject(i3.MatDialog));\n  };\n\n  TrainerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TrainerService,\n    factory: TrainerService.ɵfac,\n    providedIn: 'root'\n  });\n  return TrainerService;\n})();","map":null,"metadata":{},"sourceType":"module"}