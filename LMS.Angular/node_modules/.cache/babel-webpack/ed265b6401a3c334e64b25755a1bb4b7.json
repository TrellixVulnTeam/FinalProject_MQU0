{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { faCloudUploadAlt, faImages, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { AlertDialogComponent } from 'src/app/alert-dialog/alert-dialog.component';\nimport { Category } from 'src/app/models/category';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Service/category.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/platform-browser\";\nimport * as i4 from \"@fortawesome/angular-fontawesome\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/button\";\n\nfunction UpdateCategoryComponent_mat_error_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Category Name is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdateCategoryComponent_span_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Darg and Drop image here \");\n    i0.ɵɵelementStart(2, \"input\", 19);\n    i0.ɵɵlistener(\"change\", function UpdateCategoryComponent_span_16_Template_input_change_2_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.onFileChange($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdateCategoryComponent_img_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 20);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r2.imageSrc, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction UpdateCategoryComponent_img_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 21);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵpropertyInterpolate(\"src\", ctx_r3.formGroup.controls.image.value, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction UpdateCategoryComponent_fa_icon_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"fa-icon\", 22);\n    i0.ɵɵlistener(\"click\", function UpdateCategoryComponent_fa_icon_20_Template_fa_icon_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.deleteImage();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"icon\", ctx_r4.faTimes);\n  }\n}\n\nexport let UpdateCategoryComponent = /*#__PURE__*/(() => {\n  class UpdateCategoryComponent {\n    constructor(categoryService, dialog, sanitizer, data) {\n      this.categoryService = categoryService;\n      this.dialog = dialog;\n      this.sanitizer = sanitizer;\n      this.data = data; //icons\n\n      this.faCloudUploadAlt = faCloudUploadAlt;\n      this.faImages = faImages;\n      this.faTimes = faTimes;\n      this.formGroup = new FormGroup({\n        //  categoryId: new FormControl('', [Validators.required]),\n        name: new FormControl('', [Validators.required]),\n        image: new FormControl('', [Validators.required]) // createdBy: new FormControl('', [Validators.required])\n\n      });\n      this.imageSrc = '';\n      this.myForm = new FormGroup({\n        name: new FormControl('', [Validators.required, Validators.minLength(3)]),\n        file: new FormControl('', [Validators.required]),\n        fileSource: new FormControl('', [Validators.required])\n      });\n      this.categories = new Category();\n      this.categoryService.getCategories();\n    }\n\n    ngOnInit() {\n      if (this.data) {\n        this.formGroup.controls.name.setValue(this.data.name);\n        this.formGroup.controls.image.setValue(this.data.image); //  console.log(this.data.image)\n      }\n    }\n\n    updateCategory() {\n      let dialogRef = this.dialog.open(AlertDialogComponent);\n      dialogRef.afterClosed().subscribe(result => {\n        // NOTE: The result can also be nothing if the user presses the `esc` key or clicks outside the dialog\n        if (result == 'confirm') {\n          const category = this.formGroup.value;\n          category.categoryId = this.data.categoryId; //  category.createdBy = 1;\n\n          this.categoryService.updateCategory(category);\n          console.log('IMAGE : ' + category.image);\n          window.location.reload();\n        }\n      });\n    } ////image\n\n\n    deleteImage() {\n      this.imageSrc = '';\n    }\n\n    onFileChanged(event) {\n      const file = event.target.value;\n      let name = file;\n\n      if (event.target.files && event.target.files[0]) {\n        var reader = new FileReader();\n\n        reader.onload = event => {\n          this.localUrl = event.target.result;\n          this.categories.image = this.localUrl;\n        };\n\n        reader.readAsDataURL(event.target.files[0]);\n      }\n    }\n\n    transform() {\n      return this.sanitizer.bypassSecurityTrustResourceUrl(this.localUrl);\n    }\n\n    get f() {\n      return this.myForm.controls;\n    }\n\n    onFileChange(event) {\n      const reader = new FileReader();\n\n      if (event.target.files && event.target.files.length) {\n        const [file] = event.target.files;\n        reader.readAsDataURL(file);\n\n        reader.onload = () => {\n          this.imageSrc = reader.result;\n          this.formGroup.controls.image.setValue(this.imageSrc);\n          this.myForm.patchValue({\n            fileSource: reader.result\n          });\n          console.log(this.imageSrc);\n        };\n      }\n    }\n\n  }\n\n  UpdateCategoryComponent.ɵfac = function UpdateCategoryComponent_Factory(t) {\n    return new (t || UpdateCategoryComponent)(i0.ɵɵdirectiveInject(i1.CategoryService), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.DomSanitizer), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n\n  UpdateCategoryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateCategoryComponent,\n    selectors: [[\"app-update-category\"]],\n    decls: 24,\n    vars: 9,\n    consts: [[1, \"d-flex\", 2, \"justify-content\", \"space-between\"], [1, \"mb-3\", 2, \"font-weight\", \"bold\"], [\"mat-dialog-close\", \"\", 2, \"font-size\", \"30px\", 3, \"icon\"], [1, \"mat-typography\"], [1, \"form\", 2, \"margin-top\", \"50px\"], [3, \"formGroup\"], [1, \"row\"], [1, \"col-lg-12\"], [1, \"example-full-width\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"name\"], [4, \"ngIf\"], [1, \"col-md-6\", \"course-info\", \"mb-4\"], [1, \"dragBox\"], [1, \"d-flex\", \"flex-direction\", 2, \"flex-direction\", \"column\", \"align-items\", \"center\"], [\"class\", \"pt-2\", \"height\", \"150\", \"width\", \"150\", 3, \"src\", 4, \"ngIf\"], [\"height\", \"250\", \"width\", \"300\", 3, \"src\", 4, \"ngIf\"], [\"class\", \"pr-2\", \"style\", \"font-size: 15px;\", 3, \"icon\", \"click\", 4, \"ngIf\"], [\"align\", \"end\"], [\"mat-button\", \"\", \"cdkFocusInitial\", \"\", 3, \"mat-dialog-close\", \"disabled\", \"click\"], [\"type\", \"file\", \"ondragover\", \"drag()\", \"ondrop\", \"drop()\", \"id\", \"uploadFile\", 3, \"change\"], [\"height\", \"150\", \"width\", \"150\", 1, \"pt-2\", 3, \"src\"], [\"height\", \"250\", \"width\", \"300\", 3, \"src\"], [1, \"pr-2\", 2, \"font-size\", \"15px\", 3, \"icon\", \"click\"]],\n    template: function UpdateCategoryComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"h3\", 1);\n        i0.ɵɵtext(2, \"Manage Category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"fa-icon\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-dialog-content\", 3);\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelementStart(6, \"form\", 5);\n        i0.ɵɵelementStart(7, \"div\", 6);\n        i0.ɵɵelementStart(8, \"div\", 7);\n        i0.ɵɵelementStart(9, \"mat-form-field\", 8);\n        i0.ɵɵelementStart(10, \"mat-label\");\n        i0.ɵɵtext(11, \"Category Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 9);\n        i0.ɵɵtemplate(13, UpdateCategoryComponent_mat_error_13_Template, 4, 0, \"mat-error\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 11);\n        i0.ɵɵelementStart(15, \"div\", 12);\n        i0.ɵɵtemplate(16, UpdateCategoryComponent_span_16_Template, 3, 0, \"span\", 10);\n        i0.ɵɵelementStart(17, \"div\", 13);\n        i0.ɵɵtemplate(18, UpdateCategoryComponent_img_18_Template, 1, 1, \"img\", 14);\n        i0.ɵɵtemplate(19, UpdateCategoryComponent_img_19_Template, 1, 1, \"img\", 15);\n        i0.ɵɵtemplate(20, UpdateCategoryComponent_fa_icon_20_Template, 1, 1, \"fa-icon\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"mat-dialog-actions\", 17);\n        i0.ɵɵelementStart(22, \"button\", 18);\n        i0.ɵɵlistener(\"click\", function UpdateCategoryComponent_Template_button_click_22_listener() {\n          return ctx.updateCategory();\n        });\n        i0.ɵɵtext(23, \"Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"icon\", ctx.faTimes);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.formGroup.controls.name.hasError(\"required\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", !ctx.imageSrc);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.imageSrc);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.imageSrc);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.imageSrc);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"mat-dialog-close\", true)(\"disabled\", !ctx.formGroup.valid);\n      }\n    },\n    directives: [i4.FaIconComponent, i2.MatDialogClose, i2.MatDialogContent, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i6.MatFormField, i6.MatLabel, i7.MatInput, i5.DefaultValueAccessor, i5.NgControlStatus, i5.FormControlName, i8.NgIf, i2.MatDialogActions, i9.MatButton, i6.MatError],\n    styles: [\".input[_ngcontent-%COMP%]{background-color:transparent!important}#file[_ngcontent-%COMP%]{color:#af1a2d}fa-icon[_ngcontent-%COMP%]{color:#af1a2d}input#file-upload-button[_ngcontent-%COMP%]{background-color:#af1a2d!important;border:none!important}.example-full-width[_ngcontent-%COMP%]{width:100%}mat-dialog-actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:enabled{background-color:#af1a2d;padding:5px;color:#fff}.dragBox[_ngcontent-%COMP%]{width:300px;height:250px;margin:0 auto;position:relative;text-align:center;font-weight:bold;line-height:95px;color:#999;border:2px dashed #ccc;display:inline-block;transition:transform .3s}.dragBox[_ngcontent-%COMP%]   input[type=file][_ngcontent-%COMP%]{position:absolute;height:100%;width:100%;opacity:0;top:0;left:0}.draging[_ngcontent-%COMP%]{transform:scale(1.1)}#preview[_ngcontent-%COMP%]{text-align:center}#preview[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{max-width:100%}\"]\n  });\n  return UpdateCategoryComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}