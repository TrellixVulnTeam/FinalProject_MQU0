{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-toastr\";\nexport let PurchesService = /*#__PURE__*/(() => {\n  class PurchesService {\n    constructor(http, toastr) {\n      this.http = http;\n      this.toastr = toastr;\n      this.myPurshes = [];\n      this.myRefunds = [];\n      this.purchesCount = 0;\n      this.purchesAmount = 0;\n    }\n\n    GetMyPurshes(traineeId) {\n      this.myPurshes = [];\n      this.purchesCount = 0;\n      this.purchesAmount = 0;\n      this.http.get('http://localhost:54921/api/Customer/ReturnSoldCourses').subscribe(res => {\n        for (let record of res) {\n          if (record.traineeId == traineeId) {\n            this.myPurshes.push(record);\n            this.purchesCount++;\n            this.purchesAmount = this.purchesAmount + record.coursePrice;\n          }\n        }\n      });\n    }\n\n    GetMyRefunds(traineeId) {\n      this.http.post('http://localhost:54921/api/CourseRefunds/ReturnCourseRefund/' + traineeId, null).subscribe(res => {\n        this.myRefunds = res;\n      });\n    }\n\n    SendRefundRequest() {\n      const object = {\n        checkoutId: this.maincheckoutId,\n        refundsNotes: this.mainNotes,\n        courseId: this.maincourseId\n      };\n      console.log(object);\n      this.http.post('http://localhost:54921/api/CourseRefunds/InsertCourseRefunds', object).subscribe(res => {\n        if (res) {\n          this.toastr.success('Your Request Sent Successfly');\n        }\n      }, err => {\n        this.toastr.error('Failed Operation');\n      });\n    }\n\n    ApproveRefundReason(courseRefundsId) {\n      debugger;\n      this.http.put('http://localhost:54921/api/CourseRefunds/ApproveRefundReason/' + courseRefundsId, courseRefundsId).subscribe(res => {\n        this.myRefunds = res;\n        window.location.reload();\n        this.toastr.success(\"Aprroved Refund Reason!\");\n      }, err => {\n        this.toastr.warning(\"Somthing Wrong!\");\n      });\n    }\n\n  }\n\n  PurchesService.ɵfac = function PurchesService_Factory(t) {\n    return new (t || PurchesService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ToastrService));\n  };\n\n  PurchesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PurchesService,\n    factory: PurchesService.ɵfac,\n    providedIn: 'root'\n  });\n  return PurchesService;\n})();","map":null,"metadata":{},"sourceType":"module"}