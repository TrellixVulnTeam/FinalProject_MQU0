{"version":3,"file":"accordion.component.d.ts","sources":["accordion.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\nimport { Subject } from 'rxjs';\r\nimport { NbBooleanInput } from '../helpers';\r\n/**\r\n * An accordion allows to toggle the display of sections of content\r\n *\r\n * Basic example\r\n * @stacked-example(Showcase, accordion/accordion-showcase.component)\r\n *\r\n * ```ts\r\n * <nb-accordion>\r\n *  <nb-accordion-item>\r\n *   <nb-accordion-item-header>Product Details</nb-accordion-item-header>\r\n *   <nb-accordion-item-body>\r\n *     Item Content\r\n *   </nb-accordion-item-body>\r\n *  </nb-accordion-item>\r\n * </nb-accordion>\r\n * ```\r\n * ### Installation\r\n *\r\n * Import `NbAccordionModule` to your feature module.\r\n * ```ts\r\n * @NgModule({\r\n *   imports: [\r\n *     // ...\r\n *     NbAccordionModule,\r\n *   ],\r\n * })\r\n * export class PageModule { }\r\n * ```\r\n * ### Usage\r\n *\r\n * With `multi` mode accordion can have multiple items expanded:\r\n * @stacked-example(Multiple expanded items, accordion/accordion-multi.component)\r\n *\r\n * `NbAccordionItemComponent` has several methods, for example it is possible to trigger item click/toggle:\r\n * @stacked-example(Expand API, accordion/accordion-toggle.component)\r\n *\r\n * @styles\r\n *\r\n * accordion-border-radius:\r\n * accordion-padding:\r\n * accordion-shadow:\r\n * accordion-header-text-color:\r\n * accordion-header-text-font-family:\r\n * accordion-header-text-font-size:\r\n * accordion-header-text-font-weight:\r\n * accordion-header-text-line-height:\r\n * accordion-header-disabled-text-color:\r\n * accordion-header-border-color:\r\n * accordion-header-border-style:\r\n * accordion-header-border-width:\r\n * accordion-item-background-color:\r\n * accordion-item-text-color:\r\n * accordion-item-text-font-family:\r\n * accordion-item-text-font-size:\r\n * accordion-item-text-font-weight:\r\n * accordion-item-text-line-height:\r\n */\r\nexport declare class NbAccordionComponent {\r\n    openCloseItems: Subject<boolean>;\r\n    /**\r\n     *  Allow multiple items to be expanded at the same time.\r\n     * @type {boolean}\r\n     */\r\n    get multi(): boolean;\r\n    set multi(val: boolean);\r\n    static ngAcceptInputType_multi: NbBooleanInput;\r\n    private multiValue;\r\n    /**\r\n     * Opens all enabled accordion items.\r\n     */\r\n    openAll(): void;\r\n    /**\r\n     * Closes all enabled accordion items.\r\n     */\r\n    closeAll(): void;\r\n}\r\n"]}