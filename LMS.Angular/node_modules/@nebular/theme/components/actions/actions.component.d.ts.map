{"version":3,"file":"actions.component.d.ts","sources":["actions.component.d.ts"],"names":[],"mappingssourcesContent":["/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\nimport { NbBooleanInput } from '../helpers';\r\nimport { NbComponentSize } from '../component-size';\r\nimport { NbComponentOrCustomStatus } from '../component-status';\r\nimport { NbBadgePosition } from '../badge/badge.component';\r\nimport { NbIconConfig } from '../icon/icon.component';\r\n/**\r\n * Action item, display a link with an icon, or any other content provided instead.\r\n */\r\nexport declare class NbActionComponent {\r\n    /**\r\n     * Router link to use\r\n     * @type string\r\n     */\r\n    link: string;\r\n    /**\r\n     * Regular HREF link\r\n     * @type: string\r\n     */\r\n    href: string;\r\n    /**\r\n     * Optional title for mouseover\r\n     * @type string\r\n     */\r\n    title: string;\r\n    /**\r\n     * Icon name or config object\r\n     * @type {string | NbIconConfig}\r\n     */\r\n    icon: string | NbIconConfig;\r\n    /**\r\n     * Visually disables the item\r\n     * @type boolean\r\n     */\r\n    get disabled(): boolean;\r\n    set disabled(value: boolean);\r\n    protected _disabled: boolean;\r\n    static ngAcceptInputType_disabled: NbBooleanInput;\r\n    /**\r\n     * Use badge dot mode\r\n     * @type boolean\r\n     */\r\n    get badgeDot(): boolean;\r\n    set badgeDot(value: boolean);\r\n    protected _badgeDot: boolean;\r\n    static ngAcceptInputType_badgeDot: NbBooleanInput;\r\n    /**\r\n     * Badge text to display\r\n     * @type string\r\n     */\r\n    badgeText: string;\r\n    /**\r\n     * Badge status (adds specific styles):\r\n     * 'basic', 'primary', 'info', 'success', 'warning', 'danger', 'control'\r\n     * @param {string} val\r\n     */\r\n    badgeStatus: NbComponentOrCustomStatus;\r\n    /**\r\n     * Badge position.\r\n     * Can be set to any class or to one of predefined positions:\r\n     * 'top left', 'top right', 'bottom left', 'bottom right',\r\n     * 'top start', 'top end', 'bottom start', 'bottom end'\r\n     * @type string\r\n     */\r\n    badgePosition: NbBadgePosition;\r\n}\r\n/**\r\n * Shows a horizontal list of actions, available in multiple sizes.\r\n * Aligns items vertically.\r\n *\r\n * @stacked-example(Showcase, action/action-showcase.component)\r\n *\r\n * Basic actions setup:\r\n * ```html\r\n * <nb-actions size=\"small\">\r\n *   <nb-action icon=\"nb-search\"></nb-action>\r\n *   <nb-action icon=\"nb-power-circled\"></nb-action>\r\n *   <nb-action icon=\"nb-person\"></nb-action>\r\n * </nb-actions>\r\n * ```\r\n * ### Installation\r\n *\r\n * Import `NbActionsModule` to your feature module.\r\n * ```ts\r\n * @NgModule({\r\n *   imports: [\r\n *     // ...\r\n *     NbActionsModule,\r\n *   ],\r\n * })\r\n * export class PageModule { }\r\n * ```\r\n * ### Usage\r\n *\r\n * Multiple sizes example:\r\n * @stacked-example(Multiple Sizes, action/action-sizes.component)\r\n *\r\n * It is also possible to specify a `badge` value:\r\n *\r\n * @stacked-example(Action Badge, action/action-badge.component)\r\n *\r\n * and we can set it to full a width of a parent component\r\n * @stacked-example(Full Width, action/action-width.component)\r\n *\r\n * Action dot mode\r\n * @stacked-example(Action badge in dot mode, action/action-dot-mode.component)\r\n *\r\n * @styles\r\n *\r\n * actions-background-color:\r\n * actions-divider-color:\r\n * actions-divider-style:\r\n * actions-divider-width:\r\n * actions-icon-color:\r\n * actions-text-color:\r\n * actions-text-font-family:\r\n * actions-text-font-weight:\r\n * actions-text-line-height:\r\n * actions-disabled-icon-color:\r\n * actions-disabled-text-color:\r\n * actions-tiny-height:\r\n * actions-tiny-icon-height:\r\n * actions-tiny-padding:\r\n * actions-tiny-text-font-size:\r\n * actions-small-height:\r\n * actions-small-icon-height:\r\n * actions-small-padding:\r\n * actions-small-text-font-size:\r\n * actions-medium-height:\r\n * actions-medium-icon-height:\r\n * actions-medium-padding:\r\n * actions-medium-text-font-size:\r\n * actions-large-height:\r\n * actions-large-icon-height:\r\n * actions-large-padding:\r\n * actions-large-text-font-size:\r\n * actions-giant-height:\r\n * actions-giant-icon-height:\r\n * actions-giant-padding:\r\n * actions-giant-text-font-size:\r\n */\r\nexport declare class NbActionsComponent {\r\n    /**\r\n     * Size of the component: 'tiny', 'small' (default), 'medium', 'large', 'giant'\r\n     */\r\n    get size(): NbComponentSize;\r\n    set size(value: NbComponentSize);\r\n    protected _size: NbComponentSize;\r\n    /**\r\n     * Component will fill full width of the container\r\n     */\r\n    get fullWidth(): boolean;\r\n    set fullWidth(value: boolean);\r\n    protected _fullWidth: boolean;\r\n    static ngAcceptInputType_fullWidth: NbBooleanInput;\r\n    get tiny(): boolean;\r\n    get small(): boolean;\r\n    get medium(): boolean;\r\n    get large(): boolean;\r\n    get giant(): boolean;\r\n}\r\n"]}