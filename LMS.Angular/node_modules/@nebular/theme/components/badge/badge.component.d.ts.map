{"version":3,"file":"badge.component.d.ts","sources":["badge.component.d.ts"],"names":[],"mappingssourcesContent":["/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\nimport { NbStatusService } from '../../services/status.service';\r\nimport { NbComponentOrCustomStatus } from '../component-status';\r\nexport declare type NbBadgePhysicalPosition = 'top left' | 'top right' | 'bottom left' | 'bottom right' | 'center right' | 'center left';\r\nexport declare type NbBadgeLogicalPosition = 'top start' | 'top end' | 'bottom start' | 'bottom end' | 'center start' | 'center end';\r\nexport declare type NbBadgePosition = NbBadgePhysicalPosition | NbBadgeLogicalPosition;\r\nexport interface NbBadge {\r\n    text?: string;\r\n    position?: NbBadgePosition;\r\n    status?: NbComponentOrCustomStatus;\r\n    dotMode?: boolean;\r\n}\r\n/**\r\n * Badge is a simple labeling component.\r\n * It can be used to add additional information to any content or highlight unread items.\r\n *\r\n * Element is absolute positioned, so parent should be\r\n * [positioned element](https://developer.mozilla.org/en-US/docs/Web/CSS/position).\r\n * It means parent `position` should be set to anything except `static`, e.g. `relative`,\r\n * `absolute`, `fixed`, or `sticky`.\r\n *\r\n * ### Installation\r\n *\r\n * Import `NbBadgeModule` to your feature module.\r\n * ```ts\r\n * @NgModule({\r\n *   imports: [\r\n *     // ...\r\n *     NbBadgeModule,\r\n *   ],\r\n * })\r\n * export class PageModule { }\r\n * ```\r\n * ### Usage\r\n *\r\n * Badge with default position and status(color):\r\n *\r\n * ```html\r\n * <nb-badge text=\"badgeText\"></nb-badge>\r\n * ```\r\n *\r\n * For example, badge can be placed into nb-card header:\r\n * @stacked-example(Showcase, badge/badge-showcase.component)\r\n *\r\n * Badge located on the bottom right with warning status:\r\n *\r\n * ```html\r\n * <nb-badge text=\"badgeText\" status=\"warning\" position=\"bottom right\">\r\n * </nb-badge>\r\n * ```\r\n *\r\n * @styles\r\n *\r\n * badge-border-radius:\r\n * badge-text-font-family:\r\n * badge-text-font-size:\r\n * badge-text-font-weight:\r\n * badge-text-line-height:\r\n * badge-padding:\r\n * badge-basic-background-color:\r\n * badge-basic-text-color:\r\n * badge-primary-background-color:\r\n * badge-primary-text-color:\r\n * badge-success-background-color:\r\n * badge-success-text-color:\r\n * badge-info-background-color:\r\n * badge-info-text-color:\r\n * badge-warning-background-color:\r\n * badge-warning-text-color:\r\n * badge-danger-background-color:\r\n * badge-danger-text-color:\r\n * badge-control-background-color:\r\n * badge-control-text-color:\r\n */\r\nexport declare class NbBadgeComponent implements NbBadge {\r\n    protected statusService: NbStatusService;\r\n    /**\r\n     * Text to display\r\n     * @type string\r\n     */\r\n    text: string;\r\n    /**\r\n     * Badge position\r\n     *\r\n     * Can be set to any class or to one of predefined positions:\r\n     * 'top left', 'top right', 'bottom left', 'bottom right',\r\n     * 'top start', 'top end', 'bottom start', 'bottom end'\r\n     * @type string\r\n     */\r\n    get position(): NbBadgePosition;\r\n    set position(value: NbBadgePosition);\r\n    protected _defaultPosition: NbBadgePosition;\r\n    protected _position: NbBadgePosition;\r\n    /**\r\n     * Shows badge as a dot. No text is shown.\r\n     * @type boolean\r\n     */\r\n    get dotMode(): boolean;\r\n    set dotMode(value: boolean);\r\n    protected _dotMode: boolean;\r\n    /**\r\n     * Badge status (adds specific styles):\r\n     * 'basic', 'primary', 'info', 'success', 'warning', 'danger', 'control'\r\n     */\r\n    status: NbComponentOrCustomStatus;\r\n    get additionalClasses(): string[];\r\n    get primary(): boolean;\r\n    get success(): boolean;\r\n    get info(): boolean;\r\n    get warning(): boolean;\r\n    get danger(): boolean;\r\n    get basic(): boolean;\r\n    get control(): boolean;\r\n    get top(): boolean;\r\n    get right(): boolean;\r\n    get bottom(): boolean;\r\n    get left(): boolean;\r\n    get start(): boolean;\r\n    get end(): boolean;\r\n    get center(): boolean;\r\n    constructor(statusService: NbStatusService);\r\n}\r\n"]}