{"version":3,"file":"button-toggle.directive.d.ts","sources":["button-toggle.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\nimport { ChangeDetectorRef, ElementRef, EventEmitter, NgZone, Renderer2 } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { NbStatusService } from '../../services/status.service';\r\nimport { NbBooleanInput } from '../helpers';\r\nimport { NbButton, NbButtonAppearance } from '../button/base-button';\r\nexport declare type NbButtonToggleAppearance = Exclude<NbButtonAppearance, 'hero'>;\r\nexport interface NbButtonToggleChange {\r\n    source: NbButtonToggleDirective;\r\n    pressed: boolean;\r\n}\r\n/**\r\n * `[nbButtonToggle]` is a directive to add a `pressed` state to a button.\r\n */\r\nexport declare class NbButtonToggleDirective extends NbButton {\r\n    protected renderer: Renderer2;\r\n    protected hostElement: ElementRef<HTMLElement>;\r\n    protected cd: ChangeDetectorRef;\r\n    protected zone: NgZone;\r\n    protected statusService: NbStatusService;\r\n    protected readonly _pressedChange$: Subject<NbButtonToggleChange>;\r\n    get pressedChange$(): Observable<NbButtonToggleChange>;\r\n    appearance: NbButtonToggleAppearance;\r\n    /**\r\n     * A value associated with the button.\r\n     */\r\n    value: any;\r\n    /**\r\n     * Controls button pressed state\r\n     **/\r\n    get pressed(): boolean;\r\n    set pressed(value: boolean);\r\n    protected _pressed: boolean;\r\n    static ngAcceptInputType_pressed: NbBooleanInput;\r\n    /**\r\n     * Emits whenever button pressed state change\r\n     **/\r\n    readonly pressedChange: EventEmitter<boolean>;\r\n    get basic(): boolean;\r\n    get primary(): boolean;\r\n    get success(): boolean;\r\n    get info(): boolean;\r\n    get warning(): boolean;\r\n    get danger(): boolean;\r\n    get control(): boolean;\r\n    get additionalClasses(): string[];\r\n    onClick(): void;\r\n    constructor(renderer: Renderer2, hostElement: ElementRef<HTMLElement>, cd: ChangeDetectorRef, zone: NgZone, statusService: NbStatusService);\r\n    /**\r\n     * @docs-private\r\n     */\r\n    _updatePressed(value: boolean): void;\r\n}\r\n"]}