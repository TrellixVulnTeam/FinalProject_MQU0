{"version":3,"file":"calendar-day-picker.component.d.ts","sources":["calendar-day-picker.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\nimport { EventEmitter, OnChanges, SimpleChanges, Type } from '@angular/core';\r\nimport { NbCalendarMonthModelService } from '../../services/calendar-month-model.service';\r\nimport { NbCalendarCell, NbCalendarSize, NbCalendarSizeValues } from '../../model';\r\nimport { NbBooleanInput } from '../../../helpers';\r\n/**\r\n * Provides capability pick days.\r\n * */\r\nexport declare class NbCalendarDayPickerComponent<D, T> implements OnChanges {\r\n    private monthModel;\r\n    /**\r\n     * Describes which month picker have to render.\r\n     * */\r\n    visibleDate: D;\r\n    /**\r\n     * Defines if we should render previous and next months\r\n     * in the current month view.\r\n     * */\r\n    boundingMonths: boolean;\r\n    /**\r\n     * Minimum available date for selection.\r\n     * */\r\n    min: D;\r\n    /**\r\n     * Maximum available date for selection.\r\n     * */\r\n    max: D;\r\n    /**\r\n     * Predicate that decides which cells will be disabled.\r\n     * */\r\n    filter: (D: any) => boolean;\r\n    /**\r\n     * Custom day cell component. Have to implement `NbCalendarCell` interface.\r\n     * */\r\n    set setCellComponent(cellComponent: Type<NbCalendarCell<D, T>>);\r\n    cellComponent: Type<NbCalendarCell<any, any>>;\r\n    /**\r\n     * Size of the component.\r\n     * Can be 'medium' which is default or 'large'.\r\n     * */\r\n    size: NbCalendarSize;\r\n    static ngAcceptInputType_size: NbCalendarSizeValues;\r\n    /**\r\n     * Already selected date.\r\n     * */\r\n    date: T;\r\n    /**\r\n     * Determines should we show week numbers column.\r\n     * False by default.\r\n     * */\r\n    get showWeekNumber(): boolean;\r\n    set showWeekNumber(value: boolean);\r\n    protected _showWeekNumber: boolean;\r\n    static ngAcceptInputType_showWeekNumber: NbBooleanInput;\r\n    /**\r\n     * Sets symbol used as a header for week numbers column\r\n     * */\r\n    weekNumberSymbol: string;\r\n    /**\r\n     * Fires newly selected date.\r\n     * */\r\n    dateChange: EventEmitter<D>;\r\n    get large(): boolean;\r\n    /**\r\n     * Day picker model.\r\n     * Provides all days in current month and if boundingMonth is true some days\r\n     * from previous and next one.\r\n     * */\r\n    weeks: D[][];\r\n    constructor(monthModel: NbCalendarMonthModelService<D>);\r\n    ngOnChanges({ visibleDate, boundingMonths }: SimpleChanges): void;\r\n    onSelect(day: D): void;\r\n}\r\n"]}