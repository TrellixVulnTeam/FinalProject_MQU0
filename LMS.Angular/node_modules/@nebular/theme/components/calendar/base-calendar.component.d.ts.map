{"version":3,"file":"base-calendar.component.d.ts","sources":["base-calendar.component.d.ts"],"names":[],"mappingssourcesContent":["/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\nimport { EventEmitter, OnInit, Type } from '@angular/core';\r\nimport { NbCalendarYearModelService } from '../calendar-kit/services/calendar-year-model.service';\r\nimport { NbCalendarCell, NbCalendarSize, NbCalendarViewMode, NbCalendarSizeValues, NbCalendarViewModeValues } from '../calendar-kit/model';\r\nimport { NbDateService } from '../calendar-kit/services/date.service';\r\nimport { NbBooleanInput } from '../helpers';\r\n/**\r\n * The basis for calendar and range calendar components.\r\n * Encapsulates common behavior - store calendar state and perform navigation\r\n * between pickers.\r\n * */\r\nexport declare class NbBaseCalendarComponent<D, T> implements OnInit {\r\n    protected dateService: NbDateService<D>;\r\n    protected yearModelService: NbCalendarYearModelService<D>;\r\n    /**\r\n     * Defines if we should render previous and next months\r\n     * in the current month view.\r\n     * */\r\n    boundingMonth: boolean;\r\n    /**\r\n     * Defines active view for calendar.\r\n     * */\r\n    activeViewMode: NbCalendarViewMode;\r\n    static ngAcceptInputType_activeViewMode: NbCalendarViewModeValues;\r\n    /**\r\n     * Minimum available date for selection.\r\n     * */\r\n    min: D;\r\n    /**\r\n     * Maximum available date for selection.\r\n     * */\r\n    max: D;\r\n    /**\r\n     * Predicate that decides which cells will be disabled.\r\n     * */\r\n    filter: (D: any) => boolean;\r\n    /**\r\n     * Custom day cell component. Have to implement `NbCalendarCell` interface.\r\n     * */\r\n    dayCellComponent: Type<NbCalendarCell<D, T>>;\r\n    /**\r\n     * Custom month cell component. Have to implement `NbCalendarCell` interface.\r\n     * */\r\n    monthCellComponent: Type<NbCalendarCell<D, T>>;\r\n    /**\r\n     * Custom year cell component. Have to implement `NbCalendarCell` interface.\r\n     * */\r\n    yearCellComponent: Type<NbCalendarCell<D, T>>;\r\n    /**\r\n     * Size of the calendar and entire components.\r\n     * Can be 'medium' which is default or 'large'.\r\n     * */\r\n    size: NbCalendarSize;\r\n    static ngAcceptInputType_size: NbCalendarSizeValues;\r\n    visibleDate: D;\r\n    /**\r\n     * Determines whether we should show calendar navigation or not.\r\n     * */\r\n    showNavigation: boolean;\r\n    /**\r\n     * Value which will be rendered as selected.\r\n     * */\r\n    date: T;\r\n    /**\r\n     * Determines should we show week numbers column.\r\n     * False by default.\r\n     * */\r\n    get showWeekNumber(): boolean;\r\n    set showWeekNumber(value: boolean);\r\n    protected _showWeekNumber: boolean;\r\n    static ngAcceptInputType_showWeekNumber: NbBooleanInput;\r\n    /**\r\n     * Sets symbol used as a header for week numbers column\r\n     * */\r\n    weekNumberSymbol: string;\r\n    /**\r\n     * Emits date when selected.\r\n     * */\r\n    dateChange: EventEmitter<T>;\r\n    constructor(dateService: NbDateService<D>, yearModelService: NbCalendarYearModelService<D>);\r\n    ngOnInit(): void;\r\n    get large(): boolean;\r\n    ViewMode: typeof NbCalendarViewMode;\r\n    setViewMode(viewMode: NbCalendarViewMode): void;\r\n    setVisibleDate(visibleDate: D): void;\r\n    prevMonth(): void;\r\n    nextMonth(): void;\r\n    prevYear(): void;\r\n    nextYear(): void;\r\n    prevYears(): void;\r\n    nextYears(): void;\r\n    navigatePrev(): void;\r\n    navigateNext(): void;\r\n    onChangeViewMode(): void;\r\n    private changeVisibleMonth;\r\n    private changeVisibleYear;\r\n    private changeVisibleYears;\r\n}\r\n"]}