{"version":3,"file":"card.component.d.ts","sources":["card.component.d.ts"],"names":[],"mappingssourcesContent":["/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\nimport { NbStatusService } from '../../services/status.service';\r\nimport { NbComponentSize } from '../component-size';\r\nimport { NbComponentOrCustomStatus, NbComponentStatus } from '../component-status';\r\n/**\r\n * Component intended to be used within the `<nb-card>` component.\r\n * It adds styles for a preset header section.\r\n *\r\n * @styles\r\n *\r\n * card-header-text-color:\r\n * card-header-text-font-family:\r\n * card-header-text-font-size:\r\n * card-header-text-font-weight:\r\n * card-header-text-line-height:\r\n * card-header-basic-background-color:\r\n * card-header-basic-text-color:\r\n * card-header-primary-background-color:\r\n * card-header-primary-text-color:\r\n * card-header-info-background-color:\r\n * card-header-info-text-color:\r\n * card-header-success-background-color:\r\n * card-header-success-text-color:\r\n * card-header-warning-background-color:\r\n * card-header-warning-text-color:\r\n * card-header-danger-background-color:\r\n * card-header-danger-text-color:\r\n * card-header-control-background-color:\r\n * card-header-control-text-color:\r\n */\r\nexport declare class NbCardHeaderComponent {\r\n}\r\n/**\r\n * Component intended to be used within  the `<nb-card>` component.\r\n * Adds styles for a preset body section.\r\n */\r\nexport declare class NbCardBodyComponent {\r\n}\r\n/**\r\n * Component intended to be used within  the `<nb-card>` component.\r\n * Adds styles for a preset footer section.\r\n */\r\nexport declare class NbCardFooterComponent {\r\n}\r\n/**\r\n * Basic content container component.\r\n *\r\n * Basic card example:\r\n * @stacked-example(Showcase, card/card-showcase.component)\r\n *\r\n * Basic card configuration:\r\n *\r\n * ```html\r\n * <nb-card>\r\n *   <nb-card-body>\r\n *     Card\r\n *   </nb-card-body>\r\n * </nb-card>\r\n * ```\r\n *\r\n * ### Installation\r\n *\r\n * Import `NbCardModule` to your feature module.\r\n * ```ts\r\n * @NgModule({\r\n *   imports: [\r\n *     // ...\r\n *     NbCardModule,\r\n *   ],\r\n * })\r\n * export class PageModule { }\r\n * ```\r\n * ### Usage\r\n *\r\n * Card with header and footer:\r\n * @stacked-example(With Header & Footer, card/card-full.component)\r\n *\r\n * Most of the time main card content goes to `nb-card-body`,\r\n * so it is styled and aligned in accordance with the header and footer.\r\n * In case you need a higher level of control, you can pass contend directly to `nb-card`,\r\n * so `nb-card-body` styling will not be applied.\r\n *\r\n * Consider an example with `nb-list` component:\r\n * @stacked-example(Card with list, card/card-without-body.component)\r\n *\r\n * Colored cards could be simply configured by providing a `status` property:\r\n * @stacked-example(Colored Card, card/card-colors.component)\r\n *\r\n * It is also possible to assign an `accent` property for a slight card highlight\r\n * as well as combine it with `status`:\r\n * @stacked-example(Accent Card, card/card-accents.component)\r\n *\r\n * Cards of smaller sizes could be combined and put on the same row with a bigger card so they have the same heights.\r\n * @stacked-example(Card sizes combinations, card/card-sizes-combinations.component)\r\n *\r\n * @additional-example(Multiple Sizes, card/card-sizes.component)\r\n *\r\n * @styles\r\n *\r\n * card-background-color:\r\n * card-text-color:\r\n * card-text-font-family:\r\n * card-text-font-size:\r\n * card-text-font-weight:\r\n * card-text-line-height:\r\n * card-border-width:\r\n * card-border-style:\r\n * card-border-color:\r\n * card-border-radius:\r\n * card-padding:\r\n * card-shadow:\r\n * card-divider-color:\r\n * card-divider-style:\r\n * card-divider-width:\r\n * card-height-tiny:\r\n * card-height-small:\r\n * card-height-medium:\r\n * card-height-large:\r\n * card-height-giant:\r\n * card-margin-bottom:\r\n * card-scrollbar-color:\r\n * card-scrollbar-background-color:\r\n * card-scrollbar-width:\r\n */\r\nexport declare class NbCardComponent {\r\n    protected statusService: NbStatusService;\r\n    /**\r\n     * Card size, available sizes:\r\n     * tiny, small, medium, large, giant\r\n     */\r\n    get size(): '' | NbComponentSize;\r\n    set size(value: '' | NbComponentSize);\r\n    _size: '' | NbComponentSize;\r\n    /**\r\n     * Card status:\r\n     * `basic`, `primary`, `info`, `success`, `warning`, `danger`, `control`\r\n     */\r\n    status: '' | NbComponentOrCustomStatus;\r\n    /**\r\n     * Card accent (color of the top border):\r\n     * `basic`, `primary`, `info`, `success`, `warning`, `danger`, `control`\r\n     */\r\n    accent: '' | NbComponentStatus;\r\n    get tiny(): boolean;\r\n    get small(): boolean;\r\n    get medium(): boolean;\r\n    get large(): boolean;\r\n    get giant(): boolean;\r\n    get primary(): boolean;\r\n    get info(): boolean;\r\n    get success(): boolean;\r\n    get warning(): boolean;\r\n    get danger(): boolean;\r\n    get basic(): boolean;\r\n    get control(): boolean;\r\n    get hasAccent(): \"\" | NbComponentStatus;\r\n    get primaryAccent(): boolean;\r\n    get infoAccent(): boolean;\r\n    get successAccent(): boolean;\r\n    get warningAccent(): boolean;\r\n    get dangerAccent(): boolean;\r\n    get basicAccent(): boolean;\r\n    get controlAccent(): boolean;\r\n    get additionalClasses(): string[];\r\n    constructor(statusService: NbStatusService);\r\n}\r\n"]}