{"version":3,"file":"block-scroll-strategy-adapter.d.ts","sources":["block-scroll-strategy-adapter.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["import { NgZone } from '@angular/core';\r\nimport { BlockScrollStrategy, ScrollDispatcher, ScrollStrategyOptions } from '@angular/cdk/overlay';\r\nimport { NbLayoutScrollService } from '../../../services/scroll.service';\r\nimport { NbViewportRulerAdapter } from './viewport-ruler-adapter';\r\n/**\r\n * Overrides default block scroll strategy because default strategy blocks scrolling on the body only.\r\n * But Nebular has its own scrollable container - nb-layout. So, we need to block scrolling in it to.\r\n * */\r\nexport declare class NbBlockScrollStrategyAdapter extends BlockScrollStrategy {\r\n    protected scrollService: NbLayoutScrollService;\r\n    constructor(document: any, viewportRuler: NbViewportRulerAdapter, scrollService: NbLayoutScrollService);\r\n    enable(): void;\r\n    disable(): void;\r\n}\r\nexport declare class NbScrollStrategyOptions extends ScrollStrategyOptions {\r\n    protected scrollService: NbLayoutScrollService;\r\n    protected scrollDispatcher: ScrollDispatcher;\r\n    protected viewportRuler: NbViewportRulerAdapter;\r\n    protected ngZone: NgZone;\r\n    protected document: any;\r\n    constructor(scrollService: NbLayoutScrollService, scrollDispatcher: ScrollDispatcher, viewportRuler: NbViewportRulerAdapter, ngZone: NgZone, document: any);\r\n    block: () => NbBlockScrollStrategyAdapter;\r\n}\r\nexport declare type NbScrollStrategies = keyof Pick<NbScrollStrategyOptions, 'noop' | 'close' | 'block' | 'reposition'>;\r\n"]}