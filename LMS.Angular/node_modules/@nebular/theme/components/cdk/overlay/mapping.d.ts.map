{"version":3,"file":"mapping.d.ts","sources":["mapping.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;;;AACA;;;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA","sourcesContent":["import { ModuleWithProviders, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { CdkPortal, CdkPortalOutlet, ComponentPortal, Portal, PortalInjector, TemplatePortal } from '@angular/cdk/portal';\r\nimport { ComponentType, ConnectedOverlayPositionChange, ConnectedPosition, ConnectionPositionPair, FlexibleConnectedPositionStrategy, Overlay, OverlayConfig, OverlayContainer, OverlayPositionBuilder, OverlayRef, PositionStrategy, ScrollStrategy } from '@angular/cdk/overlay';\r\nimport { NbScrollStrategyOptions } from '../adapter/block-scroll-strategy-adapter';\r\nexport declare class NbPortalDirective extends CdkPortal {\r\n}\r\nexport declare class NbPortalOutletDirective extends CdkPortalOutlet {\r\n}\r\nexport declare class NbComponentPortal<T = any> extends ComponentPortal<T> {\r\n}\r\nexport declare class NbOverlay extends Overlay {\r\n    scrollStrategies: NbScrollStrategyOptions;\r\n}\r\nexport declare class NbOverlayPositionBuilder extends OverlayPositionBuilder {\r\n}\r\nexport declare class NbTemplatePortal<T = any> extends TemplatePortal<T> {\r\n    constructor(template: TemplateRef<T>, viewContainerRef?: ViewContainerRef, context?: T);\r\n}\r\nexport declare class NbOverlayContainer extends OverlayContainer {\r\n}\r\nexport declare class NbFlexibleConnectedPositionStrategy extends FlexibleConnectedPositionStrategy {\r\n}\r\nexport declare class NbPortalInjector extends PortalInjector {\r\n}\r\nexport declare type NbPortal<T = any> = Portal<T>;\r\nexport declare type NbOverlayRef = OverlayRef;\r\nexport declare type NbComponentType<T = any> = ComponentType<T>;\r\nexport declare type NbPositionStrategy = PositionStrategy;\r\nexport declare type NbConnectedPosition = ConnectedPosition;\r\nexport declare type NbConnectedOverlayPositionChange = ConnectedOverlayPositionChange;\r\nexport declare type NbConnectionPositionPair = ConnectionPositionPair;\r\nexport declare type NbOverlayConfig = OverlayConfig;\r\nexport declare type NbScrollStrategy = ScrollStrategy;\r\n/**\r\n * This module helps us to keep all angular/cdk deps inside our cdk module via providing aliases.\r\n * Approach will help us move cdk in separate npm package and refactor nebular/theme code.\r\n * */\r\nexport declare class NbCdkMappingModule {\r\n    static forRoot(): ModuleWithProviders<NbCdkMappingModule>;\r\n}\r\n"]}