{"version":3,"file":"chat-custom-message.directive.d.ts","sources":["chat-custom-message.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnDestroy, OnInit, TemplateRef } from '@angular/core';\r\nimport { NbBooleanInput } from '../helpers';\r\nimport { NbCustomMessageService } from './custom-message.service';\r\n/**\r\n * `[nbCustomMessage]` directive should be used as a structural directive or should be applied to the `ng-template`:\r\n *\r\n * ```html\r\n * <div *nbCustomMessage=\"'my-custom-type'; let data\">\r\n *   <!-- custom message -->\r\n * </div>\r\n * ```\r\n * or\r\n * ```html\r\n * <ng-template nbCustomMessage='my-custom-type' let-data>\r\n *   <!-- custom message -->\r\n * </ng-template>\r\n * ```\r\n */\r\nexport declare class NbChatCustomMessageDirective implements OnInit, OnDestroy {\r\n    templateRef: TemplateRef<any>;\r\n    protected customMessageService: NbCustomMessageService;\r\n    /**\r\n     * Defines a message type which should rendered with the custom message template.\r\n     * @type {string}\r\n     */\r\n    get nbCustomMessage(): string;\r\n    set nbCustomMessage(value: string);\r\n    protected _type: string;\r\n    get type(): string;\r\n    /**\r\n     * Disables generic message styles, such as round corners, text color, background, etc.,\r\n     * so a custom message could be styled from the ground up.\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    set nbCustomMessageNoStyles(value: boolean);\r\n    get nbCustomMessageNoStyles(): boolean;\r\n    protected _noStyles: boolean;\r\n    static ngAcceptInputType_noStyles: NbBooleanInput;\r\n    get noStyles(): boolean;\r\n    constructor(templateRef: TemplateRef<any>, customMessageService: NbCustomMessageService);\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n}\r\n"]}