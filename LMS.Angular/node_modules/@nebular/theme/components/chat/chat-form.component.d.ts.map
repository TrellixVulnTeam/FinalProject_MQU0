{"version":3,"file":"chat-form.component.d.ts","sources":["chat-form.component.d.ts"],"names":[],"mappingssourcesContent":["/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\nimport { ChangeDetectorRef, EventEmitter } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { NbComponentOrCustomStatus } from '../component-status';\r\n/**\r\n * Chat form component.\r\n *\r\n * Show a message form with a send message button.\r\n *\r\n * ```ts\r\n * <nb-chat-form showButton=\"true\" buttonIcon=\"nb-send\">\r\n * </nb-chat-form>\r\n * ```\r\n *\r\n * When `[dropFiles]=\"true\"` handles files drag&drop with a file preview.\r\n *\r\n * Drag & drop available for files and images:\r\n * @stacked-example(Drag & Drop Chat, chat/chat-drop.component)\r\n *\r\n * New message could be tracked outside by using `(send)` output.\r\n *\r\n * ```ts\r\n * <nb-chat-form (send)=\"onNewMessage($event)\">\r\n * </nb-chat-form>\r\n *\r\n * // ...\r\n *\r\n * onNewMessage({ message: string, files: any[] }) {\r\n *   this.service.sendToServer(message, files);\r\n * }\r\n * ```\r\n */\r\nexport declare class NbChatFormComponent {\r\n    protected cd: ChangeDetectorRef;\r\n    protected domSanitizer: DomSanitizer;\r\n    status: NbComponentOrCustomStatus;\r\n    inputFocus: boolean;\r\n    inputHover: boolean;\r\n    droppedFiles: any[];\r\n    imgDropTypes: string[];\r\n    /**\r\n     * Predefined message text\r\n     * @type {string}\r\n     */\r\n    message: string;\r\n    /**\r\n     * Message placeholder text\r\n     * @type {string}\r\n     */\r\n    messagePlaceholder: string;\r\n    /**\r\n     * Send button title\r\n     * @type {string}\r\n     */\r\n    buttonTitle: string;\r\n    /**\r\n     * Send button icon, shown if `buttonTitle` is empty\r\n     * @type {string}\r\n     */\r\n    buttonIcon: string;\r\n    /**\r\n     * Show send button\r\n     * @type {boolean}\r\n     */\r\n    showButton: boolean;\r\n    /**\r\n     * Show send button\r\n     * @type {boolean}\r\n     */\r\n    dropFiles: boolean;\r\n    /**\r\n     * File drop placeholder text\r\n     * @type {string}\r\n     */\r\n    dropFilePlaceholder: string;\r\n    /**\r\n     *\r\n     * @type {EventEmitter<{ message: string, files: File[] }>}\r\n     */\r\n    send: EventEmitter<{\r\n        message: string;\r\n        files: File[];\r\n    }>;\r\n    /**\r\n     * Emits when message input value has been changed\r\n     * @type {EventEmitter<string>}\r\n     */\r\n    onInputChange: EventEmitter<string>;\r\n    fileOver: boolean;\r\n    constructor(cd: ChangeDetectorRef, domSanitizer: DomSanitizer);\r\n    onDrop(event: any): void;\r\n    removeFile(file: any): void;\r\n    onDragOver(): void;\r\n    onDragLeave(): void;\r\n    sendMessage(): void;\r\n    setStatus(status: NbComponentOrCustomStatus): void;\r\n    getInputStatus(): NbComponentOrCustomStatus;\r\n    getButtonStatus(): NbComponentOrCustomStatus;\r\n    protected getHighlightStatus(): NbComponentOrCustomStatus;\r\n    onModelChange(value: string): void;\r\n}\r\n"]}