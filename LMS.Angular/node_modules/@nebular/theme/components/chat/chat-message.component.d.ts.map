{"version":3,"file":"chat-message.component.d.ts","sources":["chat-message.component.d.ts"],"names":[],"mappingssourcesContent":["/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\nimport { TemplateRef } from '@angular/core';\r\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\r\nimport { NbBooleanInput } from '../helpers';\r\nimport { NbChatMessageFile } from './chat-message-file.component';\r\nimport { NbCustomMessageService } from './custom-message.service';\r\nimport { NbChatCustomMessageDirective } from './chat-custom-message.directive';\r\n/**\r\n * Chat message component.\r\n *\r\n * Multiple message types are available through a `type` property, such as\r\n * - text - simple text message\r\n * - file - could be a file preview or a file icon\r\n * if multiple files are provided grouped files are shown\r\n * - quote - quotes a message with specific quote styles\r\n * - map - shows a google map picture by provided [latitude] and [longitude] properties\r\n *\r\n * @stacked-example(Available Types, chat/chat-message-types-showcase.component)\r\n *\r\n * Message with attached files:\r\n * ```html\r\n * <nb-chat-message\r\n *   type=\"file\"\r\n *   [files]=\"[ { url: '...' } ]\"\r\n *   message=\"Hello world!\">\r\n * </nb-chat-message>\r\n * ```\r\n *\r\n * Map message:\r\n * ```html\r\n * <nb-chat-message\r\n *   type=\"map\"\r\n *   [latitude]=\"53.914\"\r\n *   [longitude]=\"27.59\"\r\n *   message=\"Here I am\">\r\n * </nb-chat-message>\r\n * ```\r\n *\r\n * @styles\r\n *\r\n * chat-message-background:\r\n * chat-message-text-color:\r\n * chat-message-reply-background-color:\r\n * chat-message-reply-text-color:\r\n * chat-message-avatar-background-color:\r\n * chat-message-sender-text-color:\r\n * chat-message-quote-background-color:\r\n * chat-message-quote-text-color:\r\n * chat-message-file-text-color:\r\n * chat-message-file-background-color:\r\n */\r\nexport declare class NbChatMessageComponent {\r\n    protected domSanitizer: DomSanitizer;\r\n    protected customMessageService: NbCustomMessageService;\r\n    protected readonly builtInMessageTypes: string[];\r\n    avatarStyle: SafeStyle;\r\n    get _addReplyClass(): boolean;\r\n    get _addNotReplyClass(): boolean;\r\n    get _addNoSpaceClass(): boolean;\r\n    get flyInOut(): boolean;\r\n    get notReply(): boolean;\r\n    /**\r\n     * Determines if a message is a reply\r\n     */\r\n    get reply(): boolean;\r\n    set reply(value: boolean);\r\n    protected _reply: boolean;\r\n    static ngAcceptInputType_reply: NbBooleanInput;\r\n    /**\r\n     * Message sender\r\n     * @type {string}\r\n     */\r\n    message: string;\r\n    /**\r\n     * Message sender\r\n     * @type {string}\r\n     */\r\n    sender: string;\r\n    /**\r\n     * Message send date\r\n     * @type {Date}\r\n     */\r\n    date: Date;\r\n    /**\r\n     * Message send date format, default 'shortTime'\r\n     * @type {string}\r\n     */\r\n    dateFormat: string;\r\n    /**\r\n     * Array of files `{ url: 'file url', icon: 'file icon class' }`\r\n     */\r\n    files: NbChatMessageFile[];\r\n    /**\r\n     * Quoted message text\r\n     * @type {string}\r\n     */\r\n    quote: string;\r\n    /**\r\n     * Map latitude\r\n     * @type {number}\r\n     */\r\n    latitude: number;\r\n    /**\r\n     * Map longitude\r\n     * @type {number}\r\n     */\r\n    longitude: number;\r\n    /**\r\n     * Message send avatar\r\n     * @type {string}\r\n     */\r\n    set avatar(value: string);\r\n    /**\r\n     * Message type, available options `text|file|map|quote`\r\n     * @type {string}\r\n     */\r\n    type: string;\r\n    /**\r\n     * Data which will be set as custom message template context\r\n     * @type {any}\r\n     */\r\n    customMessageData: any;\r\n    constructor(domSanitizer: DomSanitizer, customMessageService: NbCustomMessageService);\r\n    getInitials(): string;\r\n    _isBuiltInMessageType(): boolean;\r\n    _getTemplate(): TemplateRef<any>;\r\n    _getTemplateContext(): {\r\n        $implicit: any;\r\n        isReply: boolean;\r\n    };\r\n    _areDefaultStylesEnabled(): boolean;\r\n    protected getCustomMessage(type: string): NbChatCustomMessageDirective;\r\n}\r\n"]}