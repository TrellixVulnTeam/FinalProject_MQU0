{"version":3,"file":"form-field.component.d.ts","sources":["form-field.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\nimport { AfterContentChecked, ChangeDetectorRef, QueryList, AfterContentInit, OnDestroy, NgZone, ElementRef, Renderer2, AfterViewInit } from '@angular/core';\r\nimport { Subject, Observable, ReplaySubject } from 'rxjs';\r\nimport { NbPrefixDirective } from './prefix.directive';\r\nimport { NbSuffixDirective } from './suffix.directive';\r\nimport { NbFormFieldControl, NbFormControlState, NbFormFieldControlConfig } from './form-field-control';\r\nexport declare type NbFormControlAddon = 'prefix' | 'suffix';\r\nexport declare class NbFormFieldComponent implements AfterContentChecked, AfterContentInit, AfterViewInit, OnDestroy {\r\n    protected cd: ChangeDetectorRef;\r\n    protected zone: NgZone;\r\n    protected elementRef: ElementRef;\r\n    protected renderer: Renderer2;\r\n    protected readonly destroy$: Subject<void>;\r\n    protected formControlState$: ReplaySubject<NbFormControlState>;\r\n    prefixClasses$: Observable<string[]>;\r\n    suffixClasses$: Observable<string[]>;\r\n    prefix: QueryList<NbPrefixDirective>;\r\n    suffix: QueryList<NbSuffixDirective>;\r\n    formControl: NbFormFieldControl;\r\n    formControlConfig: NbFormFieldControlConfig;\r\n    formFieldClasses: any;\r\n    constructor(cd: ChangeDetectorRef, zone: NgZone, elementRef: ElementRef, renderer: Renderer2);\r\n    ngAfterContentChecked(): void;\r\n    ngAfterContentInit(): void;\r\n    ngAfterViewInit(): void;\r\n    ngOnDestroy(): void;\r\n    shouldShowPrefix(): boolean;\r\n    shouldShowSuffix(): boolean;\r\n    protected subscribeToFormControlStateChange(): void;\r\n    protected subscribeToAddonChange(): void;\r\n    protected getAddonClasses(addon: NbFormControlAddon, state: NbFormControlState): string[];\r\n    protected getFormControlConfig(): NbFormFieldControlConfig;\r\n    protected isStatesEqual(oldState: NbFormControlState, state: NbFormControlState): boolean;\r\n}\r\n"]}