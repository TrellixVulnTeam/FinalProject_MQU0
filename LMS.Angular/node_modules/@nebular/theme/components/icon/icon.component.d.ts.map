{"version":3,"file":"icon.component.d.ts","sources":["icon.component.d.ts"],"names":[],"mappingssourcesContent":["/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\nimport { ElementRef, OnChanges, OnInit, Renderer2 } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\nimport { NbStatusService } from '../../services/status.service';\r\nimport { NbComponentOrCustomStatus } from '../component-status';\r\nimport { NbIconLibraries } from './icon-libraries';\r\nexport interface NbIconConfig {\r\n    icon: string;\r\n    pack?: string;\r\n    status?: NbComponentOrCustomStatus;\r\n    options?: {\r\n        [name: string]: any;\r\n    };\r\n}\r\n/**\r\n * Icon component. Allows to render both `svg` and `font` icons.\r\n * Starting from Nebular 4.0 uses [Eva Icons](https://akveo.github.io/eva-icons/) pack by default.\r\n *\r\n * Basic icon example:\r\n * @stacked-example(Showcase, icon/icon-showcase.component)\r\n *\r\n * Icon configuration:\r\n *\r\n * ```html\r\n * <nb-icon icon=\"star\"></nb-icon>\r\n * ```\r\n * ### Installation\r\n *\r\n * By default Nebular comes without any pre-installed icon pack.\r\n * Starting with Nebular 4.0.0 we ship separate package called `@nebular/eva-icons`\r\n * which integrates SVG [Eva Icons](https://akveo.github.io/eva-icons/) pack to Nebular. To add it to your\r\n * project run:\r\n * ```sh\r\n * npm i eva-icons @nebular/eva-icons\r\n * ```\r\n * This command will install Eva Icons pack. Then register `NbEvaIconsModule` into your app module:\r\n * ```ts\r\n * import { NbEvaIconsModule } from '@nebular/eva-icons';\r\n *\r\n * @NgModule({\r\n *   imports: [\r\n *     // ...\r\n *     NbEvaIconsModule,\r\n *   ],\r\n * })\r\n * export class AppModule { }\r\n * ```\r\n * Last thing, import `NbIconModule` to your feature module where you need to show an icon:\r\n * ```ts\r\n * import { NbIconModule } from '@nebular/theme';\r\n *\r\n * @NgModule({\r\n *   imports: [\r\n *     // ...\r\n *     NbIconModule,\r\n *   ],\r\n * })\r\n * export class PageModule { }\r\n * ```\r\n * ### Usage\r\n *\r\n * Icon can be colored using `status` input:\r\n * ```html\r\n * <nb-icon icon=\"star\" status=\"warning\"></nb-icon>\r\n * ```\r\n *\r\n * Colored icons:\r\n * @stacked-example(Colored Icons, icon/icon-colors.component)\r\n *\r\n * In case you need to specify an icon from a specific icon pack, this could be done using `pack` input property:\r\n * ```html\r\n * <nb-icon icon=\"star\" pack=\"font-awesome\"></nb-icon>\r\n * ```\r\n * Additional icon settings (if available by the icon pack) could be passed using `options` input:\r\n *\r\n * ```html\r\n * <nb-icon icon=\"star\" [options]=\"{ animation: { type: 'zoom' } }\"></nb-icon>\r\n * ```\r\n *\r\n * @styles\r\n *\r\n * icon-font-size:\r\n * icon-line-height:\r\n * icon-width:\r\n * icon-height:\r\n * icon-svg-vertical-align:\r\n * icon-basic-color:\r\n * icon-primary-color:\r\n * icon-info-color:\r\n * icon-success-color:\r\n * icon-warning-color:\r\n * icon-danger-color:\r\n * icon-control-color:\r\n */\r\nexport declare class NbIconComponent implements NbIconConfig, OnChanges, OnInit {\r\n    protected sanitizer: DomSanitizer;\r\n    protected iconLibrary: NbIconLibraries;\r\n    protected el: ElementRef;\r\n    protected renderer: Renderer2;\r\n    protected statusService: NbStatusService;\r\n    protected iconDef: any;\r\n    protected prevClasses: any[];\r\n    html: SafeHtml;\r\n    get primary(): boolean;\r\n    get info(): boolean;\r\n    get success(): boolean;\r\n    get warning(): boolean;\r\n    get danger(): boolean;\r\n    get basic(): boolean;\r\n    get control(): boolean;\r\n    get additionalClasses(): string[];\r\n    /**\r\n     * Icon name\r\n     * @param {string} status\r\n     */\r\n    icon: string;\r\n    /**\r\n     * Icon pack name\r\n     * @param {string} status\r\n     */\r\n    pack: string;\r\n    /**\r\n     * Additional icon settings\r\n     * @param {[name: string]: any}\r\n     */\r\n    options: {\r\n        [name: string]: any;\r\n    };\r\n    /**\r\n     * Icon status (adds specific styles):\r\n     * `basic`, `primary`, `info`, `success`, `warning`, `danger`, `control`\r\n     */\r\n    status?: NbComponentOrCustomStatus;\r\n    /**\r\n     * Sets all icon configurable properties via config object.\r\n     * If passed value is a string set icon name.\r\n     * @docs-private\r\n     */\r\n    get config(): string | NbIconConfig;\r\n    set config(value: string | NbIconConfig);\r\n    protected _config: string | NbIconConfig;\r\n    constructor(sanitizer: DomSanitizer, iconLibrary: NbIconLibraries, el: ElementRef, renderer: Renderer2, statusService: NbStatusService);\r\n    ngOnInit(): void;\r\n    ngOnChanges(): void;\r\n    renderIcon(name: string, pack?: string, options?: {\r\n        [name: string]: any;\r\n    }): import(\"./icon-libraries\").NbIconDefinition;\r\n    protected clearIcon(): void;\r\n    protected assignClasses(classes: string[]): void;\r\n}\r\n"]}