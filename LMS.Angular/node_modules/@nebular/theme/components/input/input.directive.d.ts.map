{"version":3,"file":"input.directive.d.ts","sources":["input.directive.d.ts"],"names":[],"mappingssourcesContent":["/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\nimport { OnDestroy, OnInit, ElementRef, SimpleChanges, OnChanges, DoCheck, AfterViewInit, Renderer2, NgZone } from '@angular/core';\r\nimport { Subject, BehaviorSubject } from 'rxjs';\r\nimport { NbStatusService } from '../../services/status.service';\r\nimport { NbBooleanInput } from '../helpers';\r\nimport { NbComponentSize } from '../component-size';\r\nimport { NbComponentShape } from '../component-shape';\r\nimport { NbComponentOrCustomStatus } from '../component-status';\r\nimport { NbFormFieldControl } from '../form-field/form-field-control';\r\nimport { NbFocusMonitor } from '../cdk/a11y/a11y.module';\r\n/**\r\n * Basic input directive.\r\n *\r\n * ```html\r\n * <input nbInput></input>\r\n * ```\r\n *\r\n * ### Installation\r\n *\r\n * Import `NbInputModule` to your feature module.\r\n * ```ts\r\n * @NgModule({\r\n *   imports: [\r\n *     // ...\r\n *     NbInputModule,\r\n *   ],\r\n * })\r\n * export class PageModule { }\r\n * ```\r\n * ### Usage\r\n *\r\n * Default input size is `medium`:\r\n * @stacked-example(Showcase, input/input-showcase.component)\r\n *\r\n * Inputs are available in multiple colors using `status` property:\r\n * @stacked-example(Input Colors, input/input-colors.component)\r\n *\r\n * There are three input sizes:\r\n *\r\n * @stacked-example(Input Sizes, input/input-sizes.component)\r\n *\r\n * Inputs available in different shapes, which could be combined with the other properties:\r\n * @stacked-example(Input Shapes, input/input-shapes.component)\r\n *\r\n * `nbInput` could be applied to the following selectors - `input`, `textarea`:\r\n * @stacked-example(Input Elements, input/input-types.component)\r\n *\r\n * You can add `fullWidth` attribute to make element fill container:\r\n * @stacked-example(Full width inputs, input/input-full-width.component)\r\n *\r\n * Or you can bind control with form controls or ngModel:\r\n * @stacked-example(Input form binding, input/input-form.component)\r\n *\r\n * Use `<nb-form-field>` to add custom content to the input field.\r\n * First import `NbFormFieldModule`. Then put the input field and custom content into\r\n * `<nb-form-field>` and add `nbPrefix` or `nbSuffix` directive to the custom content.\r\n * `nbPrefix` puts content before input and `nbSuffix` after.\r\n *\r\n * @stacked-example(Input with icon, form-field/form-field-input.component)\r\n * @stacked-example(Input with button, form-field/form-field-password.component)\r\n *\r\n * @styles\r\n *\r\n * input-border-style:\r\n * input-border-width:\r\n * input-outline-color:\r\n * input-outline-width:\r\n * input-placeholder-text-font-family:\r\n * input-text-font-family:\r\n * input-basic-text-color:\r\n * input-basic-placeholder-text-color:\r\n * input-basic-background-color:\r\n * input-basic-border-color:\r\n * input-basic-focus-background-color:\r\n * input-basic-focus-border-color:\r\n * input-basic-hover-background-color:\r\n * input-basic-hover-border-color:\r\n * input-basic-disabled-background-color:\r\n * input-basic-disabled-border-color:\r\n * input-basic-disabled-text-color:\r\n * input-basic-disabled-placeholder-text-color:\r\n * input-primary-text-color:\r\n * input-primary-placeholder-text-color:\r\n * input-primary-background-color:\r\n * input-primary-border-color:\r\n * input-primary-focus-background-color:\r\n * input-primary-focus-border-color:\r\n * input-primary-hover-background-color:\r\n * input-primary-hover-border-color:\r\n * input-primary-disabled-background-color:\r\n * input-primary-disabled-border-color:\r\n * input-primary-disabled-text-color:\r\n * input-primary-disabled-placeholder-text-color:\r\n * input-success-text-color:\r\n * input-success-placeholder-text-color:\r\n * input-success-background-color:\r\n * input-success-border-color:\r\n * input-success-focus-background-color:\r\n * input-success-focus-border-color:\r\n * input-success-hover-background-color:\r\n * input-success-hover-border-color:\r\n * input-success-disabled-background-color:\r\n * input-success-disabled-border-color:\r\n * input-success-disabled-text-color:\r\n * input-success-disabled-placeholder-text-color:\r\n * input-info-text-color:\r\n * input-info-placeholder-text-color:\r\n * input-info-background-color:\r\n * input-info-border-color:\r\n * input-info-focus-background-color:\r\n * input-info-focus-border-color:\r\n * input-info-hover-background-color:\r\n * input-info-hover-border-color:\r\n * input-info-disabled-background-color:\r\n * input-info-disabled-border-color:\r\n * input-info-disabled-text-color:\r\n * input-info-disabled-placeholder-text-color:\r\n * input-warning-text-color:\r\n * input-warning-placeholder-text-color:\r\n * input-warning-background-color:\r\n * input-warning-border-color:\r\n * input-warning-focus-background-color:\r\n * input-warning-focus-border-color:\r\n * input-warning-hover-background-color:\r\n * input-warning-hover-border-color:\r\n * input-warning-disabled-background-color:\r\n * input-warning-disabled-border-color:\r\n * input-warning-disabled-text-color:\r\n * input-warning-disabled-placeholder-text-color:\r\n * input-danger-text-color:\r\n * input-danger-placeholder-text-color:\r\n * input-danger-background-color:\r\n * input-danger-border-color:\r\n * input-danger-focus-background-color:\r\n * input-danger-focus-border-color:\r\n * input-danger-hover-background-color:\r\n * input-danger-hover-border-color:\r\n * input-danger-disabled-background-color:\r\n * input-danger-disabled-border-color:\r\n * input-danger-disabled-text-color:\r\n * input-danger-disabled-placeholder-text-color:\r\n * input-control-text-color:\r\n * input-control-placeholder-text-color:\r\n * input-control-background-color:\r\n * input-control-border-color:\r\n * input-control-focus-background-color:\r\n * input-control-focus-border-color:\r\n * input-control-hover-background-color:\r\n * input-control-hover-border-color:\r\n * input-control-disabled-background-color:\r\n * input-control-disabled-border-color:\r\n * input-control-disabled-text-color:\r\n * input-control-disabled-placeholder-text-color:\r\n * input-rectangle-border-radius:\r\n * input-semi-round-border-radius:\r\n * input-round-border-radius:\r\n * input-tiny-text-font-size:\r\n * input-tiny-text-font-weight:\r\n * input-tiny-text-line-height:\r\n * input-tiny-placeholder-text-font-size:\r\n * input-tiny-placeholder-text-font-weight:\r\n * input-tiny-placeholder-text-line-height:\r\n * input-tiny-padding:\r\n * input-tiny-max-width:\r\n * input-small-text-font-size:\r\n * input-small-text-font-weight:\r\n * input-small-text-line-height:\r\n * input-small-placeholder-text-font-size:\r\n * input-small-placeholder-text-font-weight:\r\n * input-small-placeholder-text-line-height:\r\n * input-small-padding:\r\n * input-small-max-width:\r\n * input-medium-text-font-size:\r\n * input-medium-text-font-weight:\r\n * input-medium-text-line-height:\r\n * input-medium-placeholder-text-font-size:\r\n * input-medium-placeholder-text-font-weight:\r\n * input-medium-placeholder-text-line-height:\r\n * input-medium-padding:\r\n * input-medium-max-width:\r\n * input-large-text-font-size:\r\n * input-large-text-font-weight:\r\n * input-large-text-line-height:\r\n * input-large-placeholder-text-font-size:\r\n * input-large-placeholder-text-font-weight:\r\n * input-large-placeholder-text-line-height:\r\n * input-large-padding:\r\n * input-large-max-width:\r\n * input-giant-text-font-size:\r\n * input-giant-text-font-weight:\r\n * input-giant-text-line-height:\r\n * input-giant-placeholder-text-font-size:\r\n * input-giant-placeholder-text-font-weight:\r\n * input-giant-placeholder-text-line-height:\r\n * input-giant-padding:\r\n * input-giant-max-width:\r\n */\r\nexport declare class NbInputDirective implements DoCheck, OnChanges, OnInit, AfterViewInit, OnDestroy, NbFormFieldControl {\r\n    protected elementRef: ElementRef<HTMLInputElement | HTMLTextAreaElement>;\r\n    protected focusMonitor: NbFocusMonitor;\r\n    protected renderer: Renderer2;\r\n    protected zone: NgZone;\r\n    protected statusService: NbStatusService;\r\n    protected destroy$: Subject<void>;\r\n    /**\r\n     * Field size modifications. Possible values: `small`, `medium` (default), `large`.\r\n     */\r\n    fieldSize: NbComponentSize;\r\n    /**\r\n     * Field status (adds specific styles):\r\n     * `basic`, `primary`, `info`, `success`, `warning`, `danger`, `control`\r\n     */\r\n    status: NbComponentOrCustomStatus;\r\n    /**\r\n     * Field shapes modifications. Possible values: `rectangle` (default), `round`, `semi-round`.\r\n     */\r\n    shape: NbComponentShape;\r\n    /**\r\n     * If set element will fill container. `false` by default.\r\n     */\r\n    get fullWidth(): boolean;\r\n    set fullWidth(value: boolean);\r\n    private _fullWidth;\r\n    static ngAcceptInputType_fullWidth: NbBooleanInput;\r\n    get additionalClasses(): string[];\r\n    constructor(elementRef: ElementRef<HTMLInputElement | HTMLTextAreaElement>, focusMonitor: NbFocusMonitor, renderer: Renderer2, zone: NgZone, statusService: NbStatusService);\r\n    ngDoCheck(): void;\r\n    ngOnChanges({ status, fieldSize, fullWidth }: SimpleChanges): void;\r\n    ngOnInit(): void;\r\n    ngAfterViewInit(): void;\r\n    ngOnDestroy(): void;\r\n    get tiny(): boolean;\r\n    get small(): boolean;\r\n    get medium(): boolean;\r\n    get large(): boolean;\r\n    get giant(): boolean;\r\n    get primary(): boolean;\r\n    get info(): boolean;\r\n    get success(): boolean;\r\n    get warning(): boolean;\r\n    get danger(): boolean;\r\n    get basic(): boolean;\r\n    get control(): boolean;\r\n    get rectangle(): boolean;\r\n    get semiRound(): boolean;\r\n    get round(): boolean;\r\n    status$: BehaviorSubject<string>;\r\n    size$: BehaviorSubject<NbComponentSize>;\r\n    focused$: BehaviorSubject<boolean>;\r\n    disabled$: BehaviorSubject<boolean>;\r\n    fullWidth$: BehaviorSubject<boolean>;\r\n}\r\n"]}