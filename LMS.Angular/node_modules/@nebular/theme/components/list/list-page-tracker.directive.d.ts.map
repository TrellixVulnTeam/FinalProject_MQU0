{"version":3,"file":"list-page-tracker.directive.d.ts","sources":["list-page-tracker.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { QueryList, ElementRef, AfterViewInit, OnDestroy, EventEmitter } from '@angular/core';\r\nimport 'intersection-observer';\r\n/**\r\n * List pager directive\r\n *\r\n * Directive allows you to determine page of currently viewing items.\r\n *\r\n */\r\nexport declare class NbListPageTrackerDirective implements AfterViewInit, OnDestroy {\r\n    private destroy$;\r\n    private observer;\r\n    private currentPage;\r\n    /**\r\n     * Items per page.\r\n     */\r\n    pageSize: number;\r\n    /**\r\n     * Page to start counting with.\r\n     */\r\n    startPage: number;\r\n    /**\r\n     * Emits when another page become visible.\r\n     */\r\n    pageChange: EventEmitter<number>;\r\n    listItems: QueryList<ElementRef>;\r\n    constructor();\r\n    ngAfterViewInit(): void;\r\n    ngOnDestroy(): void;\r\n    private observeItems;\r\n    private checkForPageChange;\r\n    private findMostVisiblePage;\r\n    private elementIndex;\r\n}\r\n"]}