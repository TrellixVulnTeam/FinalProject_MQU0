{"version":3,"file":"option.component.d.ts","sources":["option.component.d.ts"],"names":[],"mappingssourcesContent":["import { ChangeDetectorRef, ElementRef, EventEmitter, OnDestroy, AfterViewInit, NgZone, Renderer2 } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { NbBooleanInput } from '../helpers';\r\nimport { NbFocusableOption } from '../cdk/a11y/focus-key-manager';\r\nimport { NbHighlightableOption } from '../cdk/a11y/descendant-key-manager';\r\nimport { NbSelectComponent } from '../select/select.component';\r\n/**\r\n * NbOptionComponent\r\n *\r\n * @styles\r\n *\r\n * option-background-color:\r\n * option-text-color:\r\n * option-text-font-family:\r\n * option-hover-background-color:\r\n * option-hover-text-color:\r\n * option-active-background-color:\r\n * option-active-text-color:\r\n * option-focus-background-color:\r\n * option-focus-text-color:\r\n * option-selected-background-color:\r\n * option-selected-text-color:\r\n * option-selected-hover-background-color:\r\n * option-selected-hover-text-color:\r\n * option-selected-active-background-color:\r\n * option-selected-active-text-color:\r\n * option-selected-focus-background-color:\r\n * option-selected-focus-text-color:\r\n * option-disabled-background-color:\r\n * option-disabled-text-color:\r\n * option-tiny-text-font-size:\r\n * option-tiny-text-font-weight:\r\n * option-tiny-text-line-height:\r\n * option-tiny-padding:\r\n * option-small-text-font-size:\r\n * option-small-text-font-weight:\r\n * option-small-text-line-height:\r\n * option-small-padding:\r\n * option-medium-text-font-size:\r\n * option-medium-text-font-weight:\r\n * option-medium-text-line-height:\r\n * option-medium-padding:\r\n * option-large-text-font-size:\r\n * option-large-text-font-weight:\r\n * option-large-text-line-height:\r\n * option-large-padding:\r\n * option-giant-text-font-size:\r\n * option-giant-text-font-weight:\r\n * option-giant-text-line-height:\r\n * option-giant-padding:\r\n **/\r\nexport declare class NbOptionComponent<T = any> implements OnDestroy, AfterViewInit, NbFocusableOption, NbHighlightableOption {\r\n    protected elementRef: ElementRef;\r\n    protected cd: ChangeDetectorRef;\r\n    protected zone: NgZone;\r\n    protected renderer: Renderer2;\r\n    protected disabledByGroup: boolean;\r\n    /**\r\n     * Option value that will be fired on selection.\r\n     * */\r\n    value: T;\r\n    get disabled(): boolean;\r\n    set disabled(value: boolean);\r\n    protected _disabled: boolean;\r\n    static ngAcceptInputType_disabled: NbBooleanInput;\r\n    /**\r\n     * Fires value when option selection change.\r\n     * */\r\n    selectionChange: EventEmitter<NbOptionComponent<T>>;\r\n    /**\r\n     * Fires when option clicked\r\n     */\r\n    protected click$: Subject<NbOptionComponent<T>>;\r\n    get click(): Observable<NbOptionComponent<T>>;\r\n    selected: boolean;\r\n    protected parent: NbSelectComponent;\r\n    protected alive: boolean;\r\n    /**\r\n     * Component scoped id for aria attributes.\r\n     * */\r\n    id: string;\r\n    constructor(parent: any, elementRef: ElementRef, cd: ChangeDetectorRef, zone: NgZone, renderer: Renderer2);\r\n    ngOnDestroy(): void;\r\n    ngAfterViewInit(): void;\r\n    /**\r\n     * Determines should we render checkbox.\r\n     * */\r\n    get withCheckbox(): boolean;\r\n    get content(): any;\r\n    get multiple(): boolean;\r\n    get selectedClass(): boolean;\r\n    get disabledAttribute(): '' | null;\r\n    get tabindex(): string;\r\n    get activeClass(): boolean;\r\n    protected _active: boolean;\r\n    onClick(event: any): void;\r\n    select(): void;\r\n    deselect(): void;\r\n    /**\r\n     * Sets disabled by group state and marks component for check.\r\n     */\r\n    setDisabledByGroupState(disabled: boolean): void;\r\n    protected setSelection(selected: boolean): void;\r\n    focus(): void;\r\n    getLabel(): string;\r\n    setActiveStyles(): void;\r\n    setInactiveStyles(): void;\r\n}\r\n"]}