{"version":3,"file":"search.component.d.ts","sources":["search.component.d.ts"],"names":[],"mappingssourcesContent":["/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\nimport { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NbSearchService } from './search.service';\r\nimport { NbThemeService } from '../../services/theme.service';\r\nimport { NbOverlayService } from '../cdk/overlay/overlay-service';\r\nimport { NbPortalDirective } from '../cdk/overlay/mapping';\r\n/**\r\n * search-field-component is used under the hood by nb-search component\r\n * can't be used itself\r\n */\r\nexport declare class NbSearchFieldComponent implements OnChanges, AfterViewInit {\r\n    static readonly TYPE_MODAL_ZOOMIN = \"modal-zoomin\";\r\n    static readonly TYPE_ROTATE_LAYOUT = \"rotate-layout\";\r\n    static readonly TYPE_MODAL_MOVE = \"modal-move\";\r\n    static readonly TYPE_CURTAIN = \"curtain\";\r\n    static readonly TYPE_COLUMN_CURTAIN = \"column-curtain\";\r\n    static readonly TYPE_MODAL_DROP = \"modal-drop\";\r\n    static readonly TYPE_MODAL_HALF = \"modal-half\";\r\n    type: string;\r\n    placeholder: string;\r\n    hint: string;\r\n    show: boolean;\r\n    close: EventEmitter<any>;\r\n    search: EventEmitter<any>;\r\n    searchInput: EventEmitter<any>;\r\n    inputElement: ElementRef<HTMLInputElement>;\r\n    get showClass(): boolean;\r\n    get modalZoomin(): boolean;\r\n    get rotateLayout(): boolean;\r\n    get modalMove(): boolean;\r\n    get curtain(): boolean;\r\n    get columnCurtain(): boolean;\r\n    get modalDrop(): boolean;\r\n    get modalHalf(): boolean;\r\n    ngOnChanges({ show }: SimpleChanges): void;\r\n    ngAfterViewInit(): void;\r\n    emitClose(): void;\r\n    submitSearch(term: any): void;\r\n    emitSearchInput(term: string): void;\r\n    focusInput(): void;\r\n}\r\nexport declare type NbSearchType = 'modal-zoomin' | 'rotate-layout' | 'modal-move' | 'curtain' | 'column-curtain' | 'modal-drop' | 'modal-half';\r\n/**\r\n * Beautiful full-page search control.\r\n *\r\n * @stacked-example(Showcase, search/search-showcase.component)\r\n *\r\n * Basic setup:\r\n *\r\n * ```ts\r\n *  <nb-search type=\"rotate-layout\"></nb-search>\r\n * ```\r\n * ### Installation\r\n *\r\n * Import `NbSearchModule` to your feature module.\r\n * ```ts\r\n * @NgModule({\r\n *   imports: [\r\n *     // ...\r\n *     NbSearchModule,\r\n *   ],\r\n * })\r\n * export class PageModule { }\r\n * ```\r\n * ### Usage\r\n *\r\n * Several animation types are available:\r\n * modal-zoomin, rotate-layout, modal-move, curtain, column-curtain, modal-drop, modal-half\r\n *\r\n * It is also possible to handle search event using `NbSearchService`:\r\n *\r\n * @stacked-example(Search Event, search/search-event.component)\r\n *\r\n * @styles\r\n *\r\n * search-background-color:\r\n * search-divider-color:\r\n * search-divider-style:\r\n * search-divider-width:\r\n * search-extra-background-color:\r\n * search-text-color:\r\n * search-text-font-family:\r\n * search-text-font-size:\r\n * search-text-font-weight:\r\n * search-text-line-height:\r\n * search-placeholder-text-color:\r\n * search-info-text-color:\r\n * search-info-text-font-family:\r\n * search-info-text-font-size:\r\n * search-info-text-font-weight:\r\n * search-info-text-line-height:\r\n */\r\nexport declare class NbSearchComponent implements OnInit, OnDestroy {\r\n    private searchService;\r\n    private themeService;\r\n    private router;\r\n    private overlayService;\r\n    private changeDetector;\r\n    private destroy$;\r\n    private overlayRef;\r\n    showSearchField: boolean;\r\n    /**\r\n     * Tags a search with some ID, can be later used in the search service\r\n     * to determine which search component triggered the action, if multiple searches exist on the page.\r\n     *\r\n     * @type {string}\r\n     */\r\n    tag: string;\r\n    /**\r\n     * Search input placeholder\r\n     * @type {string}\r\n     */\r\n    placeholder: string;\r\n    /**\r\n     * Hint showing under the input field to improve user experience\r\n     *\r\n     * @type {string}\r\n     */\r\n    hint: string;\r\n    /**\r\n     * Search design type, available types are\r\n     * modal-zoomin, rotate-layout, modal-move, curtain, column-curtain, modal-drop, modal-half\r\n     * @type {string}\r\n     */\r\n    type: NbSearchType;\r\n    searchFieldPortal: NbPortalDirective;\r\n    searchButton: ElementRef<HTMLElement>;\r\n    constructor(searchService: NbSearchService, themeService: NbThemeService, router: Router, overlayService: NbOverlayService, changeDetector: ChangeDetectorRef);\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    openSearch(): void;\r\n    hideSearch(): void;\r\n    search(term: any): void;\r\n    emitInput(term: string): void;\r\n    emitActivate(): void;\r\n    emitDeactivate(): void;\r\n    private removeLayoutClasses;\r\n}\r\n"]}