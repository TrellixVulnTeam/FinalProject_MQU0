{"version":3,"file":"search.service.d.ts","sources":["search.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\nimport { Observable } from 'rxjs';\r\n/**\r\n * Search component service, connects your code to a page-level search component.\r\n */\r\nexport declare class NbSearchService {\r\n    private searchSubmittings$;\r\n    private searchActivations$;\r\n    private searchDeactivations$;\r\n    private searchInput$;\r\n    /***\r\n     * Activate (open) search component\r\n     * @param {string} searchType\r\n     * @param {string} tag\r\n     */\r\n    activateSearch(searchType: string, tag?: string): void;\r\n    /**\r\n     * Deactibate (close) search component\r\n     * @param {string} searchType\r\n     * @param {string} tag\r\n     */\r\n    deactivateSearch(searchType: string, tag?: string): void;\r\n    /**\r\n     * Trigger search submit\r\n     * @param {string} term\r\n     * @param {string} tag\r\n     */\r\n    submitSearch(term: string, tag?: string): void;\r\n    /**\r\n     * Trigger search submit by input event\r\n     * @param {string} term\r\n     * @param {string} tag\r\n     */\r\n    searchInput(term: string, tag?: string): void;\r\n    /**\r\n     * Subscribe to 'activate' event\r\n     * @returns Observable<{searchType: string; tag?: string}>\r\n     */\r\n    onSearchActivate(): Observable<{\r\n        searchType: string;\r\n        tag?: string;\r\n    }>;\r\n    /**\r\n     * Subscribe to 'deactivate' event\r\n     * @returns Observable<{searchType: string; tag?: string}>\r\n     */\r\n    onSearchDeactivate(): Observable<{\r\n        searchType: string;\r\n        tag?: string;\r\n    }>;\r\n    /**\r\n     * Subscribe to 'submit' event (when submit button clicked)\r\n     * @returns Observable<{term: string; tag?: string}>\r\n     */\r\n    onSearchSubmit(): Observable<{\r\n        term: string;\r\n        tag?: string;\r\n    }>;\r\n    /**\r\n     * Subscribe to input event\r\n     * @returns Observable<{term: string; tag?: string}>\r\n     */\r\n    onSearchInput(): Observable<{\r\n        term: string;\r\n        tag?: string;\r\n    }>;\r\n}\r\n"]}