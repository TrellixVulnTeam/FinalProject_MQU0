{"version":3,"file":"spinner.directive.d.ts","sources":["spinner.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\nimport { ComponentFactoryResolver, ComponentFactory, ComponentRef, ElementRef, OnInit, Renderer2, ViewContainerRef } from '@angular/core';\r\nimport { NbComponentSize } from '../component-size';\r\nimport { NbComponentOrCustomStatus } from '../component-status';\r\nimport { NbSpinnerComponent } from './spinner.component';\r\n/**\r\n * Styled spinner directive\r\n *\r\n * @stacked-example(Spinner Showcase, spinner/spinner-card.component)\r\n *\r\n *\r\n * ```ts\r\n * <nb-card [nbSpinner]=\"loading\" nbSpinnerStatus=\"danger\">\r\n *   <nb-card-body>Card Content</nb-card-body>\r\n * </nb-card>\r\n * ```\r\n *\r\n * ### Installation\r\n *\r\n * Import `NbSpinnerModule` to your feature module.\r\n * ```ts\r\n * @NgModule({\r\n *   imports: [\r\n *     // ...\r\n *     NbSpinnerModule,\r\n *   ],\r\n * })\r\n * export class PageModule { }\r\n * ```\r\n * ### Usage\r\n *\r\n * Could be colored using `status` property\r\n *\r\n * @stacked-example(Spinner Colors, spinner/spinner-colors.component)\r\n *\r\n * Available in different sizes with `size` property:\r\n *\r\n * @stacked-example(Spinner Sizes, spinner/spinner-sizes.component)\r\n *\r\n * It is also possible to place it into the button:\r\n * @stacked-example(Buttons with spinner, spinner/spinner-button.component)\r\n *\r\n * Or tabs:\r\n * @stacked-example(Spinner in tabs, spinner/spinner-tabs.component)\r\n */\r\nexport declare class NbSpinnerDirective implements OnInit {\r\n    private directiveView;\r\n    private componentFactoryResolver;\r\n    private renderer;\r\n    private directiveElement;\r\n    private shouldShow;\r\n    spinner: ComponentRef<NbSpinnerComponent>;\r\n    componentFactory: ComponentFactory<NbSpinnerComponent>;\r\n    /**\r\n     * Spinner message shown next to the icon\r\n     * @type {string}\r\n     */\r\n    spinnerMessage: string;\r\n    /**\r\n     * Spinner status color\r\n     * `basic`, `primary`, `info`, `success`, `warning`, `danger`, `control`.\r\n     */\r\n    spinnerStatus: NbComponentOrCustomStatus;\r\n    /**\r\n     * Spinner size. Possible values: `tiny`, `small`, `medium` (default), `large`, `giant`\r\n     */\r\n    spinnerSize: NbComponentSize;\r\n    /**\r\n     * Directive value - show or hide spinner\r\n     * @param {boolean} val\r\n     */\r\n    set nbSpinner(val: boolean);\r\n    isSpinnerExist: boolean;\r\n    constructor(directiveView: ViewContainerRef, componentFactoryResolver: ComponentFactoryResolver, renderer: Renderer2, directiveElement: ElementRef);\r\n    ngOnInit(): void;\r\n    hide(): void;\r\n    show(): void;\r\n    setInstanceInputs(instance: NbSpinnerComponent): void;\r\n}\r\n"]}