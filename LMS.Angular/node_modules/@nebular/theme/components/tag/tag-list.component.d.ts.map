{"version":3,"file":"tag-list.component.d.ts","sources":["tag-list.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\nimport { AfterContentInit, AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, NgZone, OnDestroy, OnInit, QueryList, Renderer2 } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { NbLayoutDirectionService } from '../../services/direction.service';\r\nimport { NbStatusService } from '../../services/status.service';\r\nimport { NbFocusMonitor } from '../cdk/a11y/a11y.module';\r\nimport { NbActiveDescendantKeyManager, NbActiveDescendantKeyManagerFactoryService } from '../cdk/a11y/descendant-key-manager';\r\nimport { NbBooleanInput } from '../helpers';\r\nimport { NbComponentSize } from '../component-size';\r\nimport { NbAutocompleteDirective } from '../autocomplete/autocomplete.directive';\r\nimport { NbTagComponent } from './tag.component';\r\nimport { NbTagInputDirective } from './tag-input.directive';\r\n/**\r\n *\r\n * `nb-tag-list` component displays a list of `nb-tag` components.\r\n *\r\n * @stacked-example(Tag List Showcase, tag/tag-showcase.component)\r\n *\r\n * @styles\r\n *\r\n * tag-list-tiny-tag-offset:\r\n * tag-list-small-tag-offset:\r\n * tag-list-medium-tag-offset:\r\n * tag-list-large-tag-offset:\r\n * tag-list-giant-tag-offset:\r\n * tag-list-with-input-tiny-padding:\r\n * tag-list-with-input-small-padding:\r\n * tag-list-with-input-medium-padding:\r\n * tag-list-with-input-large-padding:\r\n * tag-list-with-input-giant-padding:\r\n * tag-list-with-input-rectangle-border-radius:\r\n * tag-list-with-input-semi-round-border-radius:\r\n * tag-list-with-input-round-border-radius:\r\n */\r\nexport declare class NbTagListComponent implements OnInit, AfterContentInit, AfterViewInit, OnDestroy {\r\n    protected hostElement: ElementRef<HTMLElement>;\r\n    protected cd: ChangeDetectorRef;\r\n    protected renderer: Renderer2;\r\n    protected zone: NgZone;\r\n    protected focusMonitor: NbFocusMonitor;\r\n    protected activeDescendantKeyManagerFactory: NbActiveDescendantKeyManagerFactoryService<NbTagComponent>;\r\n    protected directionService: NbLayoutDirectionService;\r\n    protected statusService: NbStatusService;\r\n    protected readonly destroy$: Subject<void>;\r\n    protected readonly keyDown$: Subject<KeyboardEvent>;\r\n    protected readonly tagClick$: Subject<NbTagComponent>;\r\n    protected focused: boolean;\r\n    protected keyManager: NbActiveDescendantKeyManager<NbTagComponent>;\r\n    tags: QueryList<NbTagComponent>;\r\n    tagInput: NbTagInputDirective;\r\n    autocompleteDirective: NbAutocompleteDirective<any>;\r\n    /**\r\n     * Controls tags offset.\r\n     */\r\n    size: NbComponentSize;\r\n    tabIndex: number;\r\n    role: string;\r\n    get multiple(): boolean;\r\n    set multiple(value: boolean);\r\n    protected _multiple: boolean;\r\n    static ngAcceptInputType_multiple: NbBooleanInput;\r\n    activeTagId: string | null;\r\n    /**\r\n     * Emits when tag need to be removed (whether because of click on the remove button\r\n     * or when `delete` or `backspace` key pressed).\r\n     */\r\n    readonly tagRemove: EventEmitter<NbTagComponent>;\r\n    get _hasInput(): boolean;\r\n    get _isFocused(): boolean;\r\n    get _isFullWidth(): boolean;\r\n    get _inputClasses(): string[];\r\n    _onKeydown(event: KeyboardEvent): void;\r\n    _onClick({ target }: MouseEvent): void;\r\n    constructor(hostElement: ElementRef<HTMLElement>, cd: ChangeDetectorRef, renderer: Renderer2, zone: NgZone, focusMonitor: NbFocusMonitor, activeDescendantKeyManagerFactory: NbActiveDescendantKeyManagerFactoryService<NbTagComponent>, directionService: NbLayoutDirectionService, statusService: NbStatusService);\r\n    ngOnInit(): void;\r\n    ngAfterContentInit(): void;\r\n    ngAfterViewInit(): void;\r\n    ngOnDestroy(): void;\r\n    protected initKeyManager(): void;\r\n    protected listenToLayoutDirectionChange(): void;\r\n    protected listenListKeyDown(): void;\r\n    protected listenInputKeyDown(): void;\r\n    protected listenTagClick(): void;\r\n    protected listenTagRemove(): void;\r\n    protected listenTagDestroy(): void;\r\n    protected listenNoTags(): void;\r\n    protected listenActiveTagChange(): void;\r\n    protected onFocusChange(isFocused: boolean): void;\r\n    protected isBackspaceOrDelete(keyCode: number): boolean;\r\n    protected setAutocompleteCustomHost(): void;\r\n    protected toggleTag(tagToToggle: NbTagComponent): void;\r\n    protected focusInput(): void;\r\n    protected focusInputIfActive(): void;\r\n}\r\n"]}