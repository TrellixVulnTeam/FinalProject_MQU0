{"version":3,"file":"tag.component.d.ts","sources":["tag.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\nimport { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, NgZone, OnDestroy, Renderer2 } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { NbStatusService } from '../../services/status.service';\r\nimport { NbHighlightableOption } from '../cdk/a11y/descendant-key-manager';\r\nimport { NbBooleanInput } from '../helpers';\r\nimport { NbComponentOrCustomStatus } from '../component-status';\r\nimport { NbComponentSize } from '../component-size';\r\nexport declare type NbTagAppearance = 'filled' | 'outline';\r\nexport interface NbTagSelectionChange {\r\n    tag: NbTagComponent;\r\n    selected: boolean;\r\n}\r\n/**\r\n *\r\n * To show a cross on a tag and enable `remove` event add the `removable` attribute.\r\n * @stacked-example(Removable tags, tag/tag-removable.component)\r\n *\r\n * You can change appearance via `appearance` input:\r\n * @stacked-example(Tag Appearance, tag/tag-appearance.component)\r\n *\r\n * You can change status via `status` input:\r\n * @stacked-example(Tag Status, tag/tag-status.component)\r\n *\r\n * @styles\r\n *\r\n * tag-text-font-family:\r\n * tag-text-transform:\r\n * tag-border-width:\r\n * tag-border-style:\r\n * tag-border-radius:\r\n * tag-tiny-text-font-size:\r\n * tag-tiny-text-font-weight:\r\n * tag-tiny-text-line-height:\r\n * tag-tiny-padding:\r\n * tag-tiny-close-offset:\r\n * tag-small-text-font-size:\r\n * tag-small-text-font-weight:\r\n * tag-small-text-line-height:\r\n * tag-small-padding:\r\n * tag-small-close-offset:\r\n * tag-medium-text-font-size:\r\n * tag-medium-text-font-weight:\r\n * tag-medium-text-line-height:\r\n * tag-medium-padding:\r\n * tag-medium-close-offset:\r\n * tag-large-text-font-size:\r\n * tag-large-text-font-weight:\r\n * tag-large-text-line-height:\r\n * tag-large-padding:\r\n * tag-large-close-offset:\r\n * tag-giant-text-font-size:\r\n * tag-giant-text-font-weight:\r\n * tag-giant-text-line-height:\r\n * tag-giant-padding:\r\n * tag-giant-close-offset:\r\n * tag-filled-basic-background-color:\r\n * tag-filled-basic-border-color:\r\n * tag-filled-basic-text-color:\r\n * tag-filled-basic-active-background-color:\r\n * tag-filled-basic-active-border-color:\r\n * tag-filled-basic-hover-background-color:\r\n * tag-filled-basic-hover-border-color:\r\n * tag-filled-basic-selected-background-color:\r\n * tag-filled-basic-selected-border-color:\r\n * tag-filled-primary-background-color:\r\n * tag-filled-primary-border-color:\r\n * tag-filled-primary-text-color:\r\n * tag-filled-primary-active-background-color:\r\n * tag-filled-primary-active-border-color:\r\n * tag-filled-primary-hover-background-color:\r\n * tag-filled-primary-hover-border-color:\r\n * tag-filled-primary-selected-background-color:\r\n * tag-filled-primary-selected-border-color:\r\n * tag-filled-success-background-color:\r\n * tag-filled-success-border-color:\r\n * tag-filled-success-text-color:\r\n * tag-filled-success-active-background-color:\r\n * tag-filled-success-active-border-color:\r\n * tag-filled-success-hover-background-color:\r\n * tag-filled-success-hover-border-color:\r\n * tag-filled-success-selected-background-color:\r\n * tag-filled-success-selected-border-color:\r\n * tag-filled-info-background-color:\r\n * tag-filled-info-border-color:\r\n * tag-filled-info-text-color:\r\n * tag-filled-info-active-background-color:\r\n * tag-filled-info-active-border-color:\r\n * tag-filled-info-hover-background-color:\r\n * tag-filled-info-hover-border-color:\r\n * tag-filled-info-selected-background-color:\r\n * tag-filled-info-selected-border-color:\r\n * tag-filled-warning-background-color:\r\n * tag-filled-warning-border-color:\r\n * tag-filled-warning-text-color:\r\n * tag-filled-warning-active-background-color:\r\n * tag-filled-warning-active-border-color:\r\n * tag-filled-warning-hover-background-color:\r\n * tag-filled-warning-hover-border-color:\r\n * tag-filled-warning-selected-background-color:\r\n * tag-filled-warning-selected-border-color:\r\n * tag-filled-danger-background-color:\r\n * tag-filled-danger-border-color:\r\n * tag-filled-danger-text-color:\r\n * tag-filled-danger-active-background-color:\r\n * tag-filled-danger-active-border-color:\r\n * tag-filled-danger-hover-background-color:\r\n * tag-filled-danger-hover-border-color:\r\n * tag-filled-danger-selected-background-color:\r\n * tag-filled-danger-selected-border-color:\r\n * tag-filled-control-background-color:\r\n * tag-filled-control-border-color:\r\n * tag-filled-control-text-color:\r\n * tag-filled-control-active-background-color:\r\n * tag-filled-control-active-border-color:\r\n * tag-filled-control-hover-background-color:\r\n * tag-filled-control-hover-border-color:\r\n * tag-filled-control-selected-background-color:\r\n * tag-filled-control-selected-border-color:\r\n * tag-outline-basic-background-color:\r\n * tag-outline-basic-border-color:\r\n * tag-outline-basic-text-color:\r\n * tag-outline-basic-active-background-color:\r\n * tag-outline-basic-active-border-color:\r\n * tag-outline-basic-active-text-color:\r\n * tag-outline-basic-hover-background-color:\r\n * tag-outline-basic-hover-border-color:\r\n * tag-outline-basic-hover-text-color:\r\n * tag-outline-basic-selected-background-color:\r\n * tag-outline-basic-selected-border-color:\r\n * tag-outline-basic-selected-text-color:\r\n * tag-outline-primary-background-color:\r\n * tag-outline-primary-border-color:\r\n * tag-outline-primary-text-color:\r\n * tag-outline-primary-active-background-color:\r\n * tag-outline-primary-active-border-color:\r\n * tag-outline-primary-active-text-color:\r\n * tag-outline-primary-hover-background-color:\r\n * tag-outline-primary-hover-border-color:\r\n * tag-outline-primary-hover-text-color:\r\n * tag-outline-primary-selected-background-color:\r\n * tag-outline-primary-selected-border-color:\r\n * tag-outline-primary-selected-text-color:\r\n * tag-outline-success-background-color:\r\n * tag-outline-success-border-color:\r\n * tag-outline-success-text-color:\r\n * tag-outline-success-active-background-color:\r\n * tag-outline-success-active-border-color:\r\n * tag-outline-success-active-text-color:\r\n * tag-outline-success-hover-background-color:\r\n * tag-outline-success-hover-border-color:\r\n * tag-outline-success-hover-text-color:\r\n * tag-outline-success-selected-background-color:\r\n * tag-outline-success-selected-border-color:\r\n * tag-outline-success-selected-text-color:\r\n * tag-outline-info-background-color:\r\n * tag-outline-info-border-color:\r\n * tag-outline-info-text-color:\r\n * tag-outline-info-active-background-color:\r\n * tag-outline-info-active-border-color:\r\n * tag-outline-info-active-text-color:\r\n * tag-outline-info-hover-background-color:\r\n * tag-outline-info-hover-border-color:\r\n * tag-outline-info-hover-text-color:\r\n * tag-outline-info-selected-background-color:\r\n * tag-outline-info-selected-border-color:\r\n * tag-outline-info-selected-text-color:\r\n * tag-outline-warning-background-color:\r\n * tag-outline-warning-border-color:\r\n * tag-outline-warning-text-color:\r\n * tag-outline-warning-active-background-color:\r\n * tag-outline-warning-active-border-color:\r\n * tag-outline-warning-active-text-color:\r\n * tag-outline-warning-hover-background-color:\r\n * tag-outline-warning-hover-border-color:\r\n * tag-outline-warning-hover-text-color:\r\n * tag-outline-warning-selected-background-color:\r\n * tag-outline-warning-selected-border-color:\r\n * tag-outline-warning-selected-text-color:\r\n * tag-outline-danger-background-color:\r\n * tag-outline-danger-border-color:\r\n * tag-outline-danger-text-color:\r\n * tag-outline-danger-active-background-color:\r\n * tag-outline-danger-active-border-color:\r\n * tag-outline-danger-active-text-color:\r\n * tag-outline-danger-hover-background-color:\r\n * tag-outline-danger-hover-border-color:\r\n * tag-outline-danger-hover-text-color:\r\n * tag-outline-danger-selected-background-color:\r\n * tag-outline-danger-selected-border-color:\r\n * tag-outline-danger-selected-text-color:\r\n * tag-outline-control-background-color:\r\n * tag-outline-control-border-color:\r\n * tag-outline-control-text-color:\r\n * tag-outline-control-active-background-color:\r\n * tag-outline-control-active-border-color:\r\n * tag-outline-control-active-text-color:\r\n * tag-outline-control-hover-background-color:\r\n * tag-outline-control-hover-border-color:\r\n * tag-outline-control-hover-text-color:\r\n * tag-outline-control-selected-background-color:\r\n * tag-outline-control-selected-border-color:\r\n * tag-outline-control-selected-text-color:\r\n */\r\nexport declare class NbTagComponent implements AfterViewInit, OnDestroy, NbHighlightableOption {\r\n    _hostElement: ElementRef;\r\n    protected cd: ChangeDetectorRef;\r\n    protected renderer: Renderer2;\r\n    protected zone: NgZone;\r\n    protected statusService: NbStatusService;\r\n    private _destroy$;\r\n    get destroy$(): Observable<NbTagComponent>;\r\n    /**\r\n     * Tag text.\r\n     */\r\n    text: string;\r\n    get selected(): boolean;\r\n    set selected(value: boolean);\r\n    protected _selected: boolean;\r\n    static ngAcceptInputType_selected: NbBooleanInput;\r\n    /**\r\n     * Controls whether the user can remove a tag or not.\r\n     */\r\n    get removable(): boolean;\r\n    set removable(value: boolean);\r\n    protected _removable: boolean;\r\n    static ngAcceptInputType_removable: NbBooleanInput;\r\n    /**\r\n     * Tag appearance: `filled`, `outline`.\r\n     */\r\n    appearance: NbTagAppearance;\r\n    /**\r\n     * Tag status: `basic`, `primary`, `info`, `success`, `warning`, `danger`, `control`.\r\n     */\r\n    status: NbComponentOrCustomStatus;\r\n    /**\r\n     * Tag size: `tiny`, `small`, `medium`, `large`, `giant`.\r\n     */\r\n    size: NbComponentSize;\r\n    role: string;\r\n    /**\r\n     * Emits when the user removes the tag\r\n     * (whether by clicking on the remove button or by pressing `delete` or `backspace` key).\r\n     */\r\n    readonly remove: EventEmitter<NbTagComponent>;\r\n    readonly selectedChange: EventEmitter<NbTagSelectionChange>;\r\n    _isActive: boolean;\r\n    _id: string;\r\n    get filled(): boolean;\r\n    set filled(value: boolean);\r\n    get outline(): boolean;\r\n    set outline(value: boolean);\r\n    get basic(): boolean;\r\n    get primary(): boolean;\r\n    get success(): boolean;\r\n    get info(): boolean;\r\n    get warning(): boolean;\r\n    get danger(): boolean;\r\n    get control(): boolean;\r\n    get tiny(): boolean;\r\n    get small(): boolean;\r\n    get medium(): boolean;\r\n    get large(): boolean;\r\n    get giant(): boolean;\r\n    get additionalClasses(): string[];\r\n    _remove(): void;\r\n    constructor(_hostElement: ElementRef, cd: ChangeDetectorRef, renderer: Renderer2, zone: NgZone, statusService: NbStatusService);\r\n    ngAfterViewInit(): void;\r\n    ngOnDestroy(): void;\r\n    _toggleSelection(): void;\r\n    setActiveStyles(): void;\r\n    setInactiveStyles(): void;\r\n}\r\n"]}