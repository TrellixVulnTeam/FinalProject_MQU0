{"version":3,"file":"toggle.component.d.ts","sources":["toggle.component.d.ts"],"names":[],"mappingssourcesContent":["/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\nimport { ChangeDetectorRef, OnInit, EventEmitter, OnDestroy, Renderer2, ElementRef, AfterViewInit, NgZone } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { NbStatusService } from '../../services/status.service';\r\nimport { NbLayoutDirectionService } from '../../services/direction.service';\r\nimport { NbComponentOrCustomStatus } from '../component-status';\r\nimport { NbBooleanInput } from '../helpers';\r\n/**\r\n * Toggle is a control representing `on` and `off` states.\r\n *\r\n * @stacked-example(Showcase, toggle/toggle-showcase.component)\r\n *\r\n * ### Installation\r\n *\r\n * Import `NbToggleComponent` to your feature module.\r\n * ```ts\r\n * @NgModule({\r\n *   imports: [\r\n *     // ...\r\n *     NbToggleModule,\r\n *   ],\r\n * })\r\n * export class PageModule { }\r\n * ```\r\n * ### Usage\r\n *\r\n * Toggle may have one of the following statuses: `basic`, `primary`, `success`, `warning`, `danger`, `info`, `control`\r\n *\r\n * @stacked-example(Toggle status, toggle/toggle-status.component)\r\n *\r\n * Toggle can be disabled via `disabled` input.\r\n *\r\n * @stacked-example(Disabled Toggles, toggle/toggle-disabled.component)\r\n *\r\n * Toggle may have a label with following positions: `left`, `right`, `start`, `end` (default)\r\n *\r\n * @stacked-example(Toggles With Labels, toggle/toggle-label-position.component.ts)\r\n *\r\n * You can set control state via `checked` binding:\r\n *\r\n * ```html\r\n * <nb-toggle [(checked)]=\"checked\"></nb-toggle>\r\n * ```\r\n *\r\n * Or it could be set via reactive forms or ngModel bindings:\r\n *\r\n * @stacked-example(Toggle form binding, toggle/toggle-form.component)\r\n *\r\n * @styles\r\n *\r\n * toggle-height:\r\n * toggle-width:\r\n * toggle-border-width:\r\n * toggle-border-radius:\r\n * toggle-outline-width:\r\n * toggle-outline-color:\r\n * toggle-switcher-size:\r\n * toggle-switcher-icon-size:\r\n * toggle-text-font-family:\r\n * toggle-text-font-size:\r\n * toggle-text-font-weight:\r\n * toggle-text-line-height:\r\n * toggle-cursor:\r\n * toggle-disabled-cursor:\r\n * toggle-basic-text-color:\r\n * toggle-basic-background-color:\r\n * toggle-basic-border-color:\r\n * toggle-basic-checked-background-color:\r\n * toggle-basic-checked-border-color:\r\n * toggle-basic-checked-switcher-background-color:\r\n * toggle-basic-checked-switcher-checkmark-color:\r\n * toggle-basic-focus-background-color:\r\n * toggle-basic-focus-border-color:\r\n * toggle-basic-focus-checked-background-color:\r\n * toggle-basic-focus-checked-border-color:\r\n * toggle-basic-hover-background-color:\r\n * toggle-basic-hover-border-color:\r\n * toggle-basic-hover-checked-background-color:\r\n * toggle-basic-hover-checked-border-color:\r\n * toggle-basic-active-background-color:\r\n * toggle-basic-active-border-color:\r\n * toggle-basic-active-checked-background-color:\r\n * toggle-basic-active-checked-border-color:\r\n * toggle-basic-disabled-background-color:\r\n * toggle-basic-disabled-border-color:\r\n * toggle-basic-disabled-switcher-background-color:\r\n * toggle-basic-disabled-checked-switcher-checkmark-color:\r\n * toggle-basic-disabled-text-color:\r\n * toggle-primary-text-color:\r\n * toggle-primary-background-color:\r\n * toggle-primary-border-color:\r\n * toggle-primary-checked-background-color:\r\n * toggle-primary-checked-border-color:\r\n * toggle-primary-checked-switcher-background-color:\r\n * toggle-primary-checked-switcher-checkmark-color:\r\n * toggle-primary-focus-background-color:\r\n * toggle-primary-focus-border-color:\r\n * toggle-primary-focus-checked-background-color:\r\n * toggle-primary-focus-checked-border-color:\r\n * toggle-primary-hover-background-color:\r\n * toggle-primary-hover-border-color:\r\n * toggle-primary-hover-checked-background-color:\r\n * toggle-primary-hover-checked-border-color:\r\n * toggle-primary-active-background-color:\r\n * toggle-primary-active-border-color:\r\n * toggle-primary-active-checked-background-color:\r\n * toggle-primary-active-checked-border-color:\r\n * toggle-primary-disabled-background-color:\r\n * toggle-primary-disabled-border-color:\r\n * toggle-primary-disabled-switcher-background-color:\r\n * toggle-primary-disabled-checked-switcher-checkmark-color:\r\n * toggle-primary-disabled-text-color:\r\n * toggle-success-text-color:\r\n * toggle-success-background-color:\r\n * toggle-success-border-color:\r\n * toggle-success-checked-background-color:\r\n * toggle-success-checked-border-color:\r\n * toggle-success-checked-switcher-background-color:\r\n * toggle-success-checked-switcher-checkmark-color:\r\n * toggle-success-focus-background-color:\r\n * toggle-success-focus-border-color:\r\n * toggle-success-focus-checked-background-color:\r\n * toggle-success-focus-checked-border-color:\r\n * toggle-success-hover-background-color:\r\n * toggle-success-hover-border-color:\r\n * toggle-success-hover-checked-background-color:\r\n * toggle-success-hover-checked-border-color:\r\n * toggle-success-active-background-color:\r\n * toggle-success-active-border-color:\r\n * toggle-success-active-checked-background-color:\r\n * toggle-success-active-checked-border-color:\r\n * toggle-success-disabled-background-color:\r\n * toggle-success-disabled-border-color:\r\n * toggle-success-disabled-switcher-background-color:\r\n * toggle-success-disabled-checked-switcher-checkmark-color:\r\n * toggle-success-disabled-text-color:\r\n * toggle-info-text-color:\r\n * toggle-info-background-color:\r\n * toggle-info-border-color:\r\n * toggle-info-checked-background-color:\r\n * toggle-info-checked-border-color:\r\n * toggle-info-checked-switcher-background-color:\r\n * toggle-info-checked-switcher-checkmark-color:\r\n * toggle-info-focus-background-color:\r\n * toggle-info-focus-border-color:\r\n * toggle-info-focus-checked-background-color:\r\n * toggle-info-focus-checked-border-color:\r\n * toggle-info-hover-background-color:\r\n * toggle-info-hover-border-color:\r\n * toggle-info-hover-checked-background-color:\r\n * toggle-info-hover-checked-border-color:\r\n * toggle-info-active-background-color:\r\n * toggle-info-active-border-color:\r\n * toggle-info-active-checked-background-color:\r\n * toggle-info-active-checked-border-color:\r\n * toggle-info-disabled-background-color:\r\n * toggle-info-disabled-border-color:\r\n * toggle-info-disabled-switcher-background-color:\r\n * toggle-info-disabled-checked-switcher-checkmark-color:\r\n * toggle-info-disabled-text-color:\r\n * toggle-warning-text-color:\r\n * toggle-warning-background-color:\r\n * toggle-warning-border-color:\r\n * toggle-warning-checked-background-color:\r\n * toggle-warning-checked-border-color:\r\n * toggle-warning-checked-switcher-background-color:\r\n * toggle-warning-checked-switcher-checkmark-color:\r\n * toggle-warning-focus-background-color:\r\n * toggle-warning-focus-border-color:\r\n * toggle-warning-focus-checked-background-color:\r\n * toggle-warning-focus-checked-border-color:\r\n * toggle-warning-hover-background-color:\r\n * toggle-warning-hover-border-color:\r\n * toggle-warning-hover-checked-background-color:\r\n * toggle-warning-hover-checked-border-color:\r\n * toggle-warning-active-background-color:\r\n * toggle-warning-active-border-color:\r\n * toggle-warning-active-checked-background-color:\r\n * toggle-warning-active-checked-border-color:\r\n * toggle-warning-disabled-background-color:\r\n * toggle-warning-disabled-border-color:\r\n * toggle-warning-disabled-switcher-background-color:\r\n * toggle-warning-disabled-checked-switcher-checkmark-color:\r\n * toggle-warning-disabled-text-color:\r\n * toggle-danger-text-color:\r\n * toggle-danger-background-color:\r\n * toggle-danger-border-color:\r\n * toggle-danger-checked-background-color:\r\n * toggle-danger-checked-border-color:\r\n * toggle-danger-checked-switcher-background-color:\r\n * toggle-danger-checked-switcher-checkmark-color:\r\n * toggle-danger-focus-background-color:\r\n * toggle-danger-focus-border-color:\r\n * toggle-danger-focus-checked-background-color:\r\n * toggle-danger-focus-checked-border-color:\r\n * toggle-danger-hover-background-color:\r\n * toggle-danger-hover-border-color:\r\n * toggle-danger-hover-checked-background-color:\r\n * toggle-danger-hover-checked-border-color:\r\n * toggle-danger-active-background-color:\r\n * toggle-danger-active-border-color:\r\n * toggle-danger-active-checked-background-color:\r\n * toggle-danger-active-checked-border-color:\r\n * toggle-danger-disabled-background-color:\r\n * toggle-danger-disabled-border-color:\r\n * toggle-danger-disabled-switcher-background-color:\r\n * toggle-danger-disabled-checked-switcher-checkmark-color:\r\n * toggle-danger-disabled-text-color:\r\n * toggle-control-text-color:\r\n * toggle-control-background-color:\r\n * toggle-control-border-color:\r\n * toggle-control-checked-background-color:\r\n * toggle-control-checked-border-color:\r\n * toggle-control-checked-switcher-background-color:\r\n * toggle-control-checked-switcher-checkmark-color:\r\n * toggle-control-focus-background-color:\r\n * toggle-control-focus-border-color:\r\n * toggle-control-focus-checked-background-color:\r\n * toggle-control-focus-checked-border-color:\r\n * toggle-control-hover-background-color:\r\n * toggle-control-hover-border-color:\r\n * toggle-control-hover-checked-background-color:\r\n * toggle-control-hover-checked-border-color:\r\n * toggle-control-active-background-color:\r\n * toggle-control-active-border-color:\r\n * toggle-control-active-checked-background-color:\r\n * toggle-control-active-checked-border-color:\r\n * toggle-control-disabled-background-color:\r\n * toggle-control-disabled-border-color:\r\n * toggle-control-disabled-switcher-background-color:\r\n * toggle-control-disabled-checked-switcher-checkmark-color:\r\n * toggle-control-disabled-text-color:\r\n */\r\nexport declare class NbToggleComponent implements OnInit, AfterViewInit, OnDestroy, ControlValueAccessor {\r\n    private changeDetector;\r\n    private layoutDirection;\r\n    private renderer;\r\n    private hostElement;\r\n    private zone;\r\n    protected statusService: NbStatusService;\r\n    onChange: any;\r\n    onTouched: any;\r\n    private destroy$;\r\n    /**\r\n     * Toggle checked\r\n     * @type {boolean}\r\n     */\r\n    get checked(): boolean;\r\n    set checked(value: boolean);\r\n    private _checked;\r\n    static ngAcceptInputType_checked: NbBooleanInput;\r\n    /**\r\n     * Controls input disabled state\r\n     */\r\n    get disabled(): boolean;\r\n    set disabled(value: boolean);\r\n    private _disabled;\r\n    static ngAcceptInputType_disabled: NbBooleanInput;\r\n    /**\r\n     * Toggle status.\r\n     * Possible values are: `basic`, `primary`, `success`, `warning`, `danger`, `info`, `control`.\r\n     */\r\n    status: NbComponentOrCustomStatus;\r\n    /**\r\n     * Toggle label position.\r\n     * Possible values are: `left`, `right`, `start`, `end` (default)\r\n     */\r\n    labelPosition: 'left' | 'right' | 'start' | 'end';\r\n    /**\r\n     * Output when checked state is changed by a user\r\n     * @type EventEmitter<boolean>\r\n     */\r\n    checkedChange: EventEmitter<boolean>;\r\n    get primary(): boolean;\r\n    get success(): boolean;\r\n    get warning(): boolean;\r\n    get danger(): boolean;\r\n    get info(): boolean;\r\n    get basic(): boolean;\r\n    get control(): boolean;\r\n    get additionalClasses(): string[];\r\n    get labelLeft(): boolean;\r\n    get labelRight(): boolean;\r\n    get labelStart(): boolean;\r\n    get labelEnd(): boolean;\r\n    constructor(changeDetector: ChangeDetectorRef, layoutDirection: NbLayoutDirectionService, renderer: Renderer2, hostElement: ElementRef<HTMLElement>, zone: NgZone, statusService: NbStatusService);\r\n    ngOnInit(): void;\r\n    ngAfterViewInit(): void;\r\n    ngOnDestroy(): void;\r\n    checkState(): string;\r\n    registerOnChange(fn: any): void;\r\n    registerOnTouched(fn: any): void;\r\n    writeValue(val: any): void;\r\n    setDisabledState(val: boolean): void;\r\n    updateValue(event: Event): void;\r\n    onInputClick(event: Event): void;\r\n}\r\n"]}