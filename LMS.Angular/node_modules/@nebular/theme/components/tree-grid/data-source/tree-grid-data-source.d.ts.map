{"version":3,"file":"tree-grid-data-source.d.ts","sources":["tree-grid-data-source.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Observable } from 'rxjs';\r\nimport { NbCollectionViewer } from '../../cdk/collections/collection-viewer';\r\nimport { NbDataSource } from '../../cdk/table/data-source';\r\nimport { NbSortable, NbSortRequest } from '../tree-grid-sort.component';\r\nimport { NbTreeGridDataService } from './tree-grid-data.service';\r\nimport { NbTreeGridFilterService } from './tree-grid-filter.service';\r\nimport { NbTreeGridSortService } from './tree-grid-sort.service';\r\nimport { NbGetters, NbTreeGridPresentationNode } from './tree-grid.model';\r\nimport { NbToggleOptions, NbTreeGridService } from './tree-grid.service';\r\nexport interface NbFilterable {\r\n    filter(filterRequest: string): any;\r\n}\r\nexport declare class NbTreeGridDataSource<T> extends NbDataSource<NbTreeGridPresentationNode<T>> implements NbSortable, NbFilterable {\r\n    private sortService;\r\n    private filterService;\r\n    private treeGridService;\r\n    private treeGridDataService;\r\n    /** Stream that emits when a new data array is set on the data source. */\r\n    private data;\r\n    /** Stream emitting render data to the table (depends on ordered data changes). */\r\n    private readonly renderData;\r\n    private readonly filterRequest;\r\n    private readonly sortRequest;\r\n    constructor(sortService: NbTreeGridSortService<T>, filterService: NbTreeGridFilterService<T>, treeGridService: NbTreeGridService<T>, treeGridDataService: NbTreeGridDataService<T>);\r\n    setData<N>(data: N[], customGetters?: NbGetters<N, T>): void;\r\n    connect(collectionViewer: NbCollectionViewer): Observable<NbTreeGridPresentationNode<T>[] | ReadonlyArray<NbTreeGridPresentationNode<T>>>;\r\n    disconnect(collectionViewer: NbCollectionViewer): void;\r\n    expand(row: T): void;\r\n    collapse(row: T): void;\r\n    toggle(row: T, options?: NbToggleOptions): void;\r\n    toggleByIndex(dataIndex: number, options?: NbToggleOptions): void;\r\n    getLevel(rowIndex: number): number;\r\n    sort(sortRequest: NbSortRequest): void;\r\n    filter(searchQuery: string): void;\r\n    protected updateChangeSubscription(): void;\r\n    private filterData;\r\n    private sortData;\r\n}\r\nexport declare class NbTreeGridDataSourceBuilder<T> {\r\n    private filterService;\r\n    private sortService;\r\n    private treeGridService;\r\n    private treeGridDataService;\r\n    constructor(filterService: NbTreeGridFilterService<T>, sortService: NbTreeGridSortService<T>, treeGridService: NbTreeGridService<T>, treeGridDataService: NbTreeGridDataService<T>);\r\n    create<N>(data: N[], customGetters?: NbGetters<N, T>): NbTreeGridDataSource<T>;\r\n}\r\n"]}