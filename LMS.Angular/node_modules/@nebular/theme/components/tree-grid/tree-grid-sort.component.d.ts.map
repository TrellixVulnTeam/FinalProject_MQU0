{"version":3,"file":"tree-grid-sort.component.d.ts","sources":["tree-grid-sort.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["import { EventEmitter, TemplateRef } from '@angular/core';\r\nimport { NbBooleanInput, NbNullableInput } from '../helpers';\r\n/** Column definition associated with a `NbSortHeaderDirective`. */\r\ninterface NbSortHeaderColumnDef {\r\n    name: string;\r\n}\r\nexport interface NbSortRequest {\r\n    column: string;\r\n    direction: NbSortDirection;\r\n}\r\nexport interface NbSortable {\r\n    sort(sortRequest: NbSortRequest): any;\r\n}\r\nexport declare type NbSortDirectionValues = 'asc' | 'desc' | '';\r\nexport declare enum NbSortDirection {\r\n    ASCENDING = \"asc\",\r\n    DESCENDING = \"desc\",\r\n    NONE = \"\"\r\n}\r\n/**\r\n * Directive triggers sort method of passed object when sort header changes direction\r\n */\r\nexport declare class NbSortDirective {\r\n    sortable: NbSortable;\r\n    static ngAcceptInputType_sortable: NbSortable | NbNullableInput;\r\n    sort: EventEmitter<NbSortRequest>;\r\n    emitSort(sortRequest: NbSortRequest): void;\r\n}\r\nexport interface NbSortHeaderIconDirectiveContext {\r\n    $implicit: NbSortDirection;\r\n    isAscending: boolean;\r\n    isDescending: boolean;\r\n    isNone: boolean;\r\n}\r\n/**\r\n * Directive for headers sort icons. Mark you icon implementation with this structural directive and\r\n * it'll set template's implicit context with current direction. Context also has `isAscending`,\r\n * `isDescending` and `isNone` properties.\r\n */\r\nexport declare class NbSortHeaderIconDirective {\r\n}\r\nexport declare class NbSortIconComponent {\r\n    direction: NbSortDirection;\r\n    isAscending(): boolean;\r\n    isDescending(): boolean;\r\n    isDirectionSet(): boolean;\r\n}\r\n/**\r\n * Marks header as sort header so it emitting sort event when clicked.\r\n */\r\nexport declare class NbSortHeaderComponent {\r\n    private sort;\r\n    private columnDef;\r\n    sortIcon: TemplateRef<NbSortHeaderIconDirectiveContext>;\r\n    /**\r\n     * Current sort direction. Possible values: `asc`, `desc`, ``(none)\r\n     * @type {NbSortDirection}\r\n     */\r\n    direction: NbSortDirection;\r\n    static ngAcceptInputType_direction: NbSortDirectionValues;\r\n    private disabledValue;\r\n    /**\r\n     * Disable sort header\r\n     */\r\n    set disabled(value: boolean);\r\n    get disabled(): boolean;\r\n    static ngAcceptInputType_disabled: NbBooleanInput;\r\n    sortIfEnabled(): void;\r\n    constructor(sort: NbSortDirective, columnDef: NbSortHeaderColumnDef);\r\n    isAscending(): boolean;\r\n    isDescending(): boolean;\r\n    sortData(): void;\r\n    getIconContext(): NbSortHeaderIconDirectiveContext;\r\n    getDisabledAttributeValue(): '' | null;\r\n    private createSortRequest;\r\n    private getNextDirection;\r\n}\r\nexport {};\r\n"]}