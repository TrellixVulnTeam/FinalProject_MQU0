{"version":3,"file":"breakpoints.service.d.ts","sources":["breakpoints.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\n/**\r\n * Media breakpoint type\r\n *\r\n * Where `name` - breakpoint name alias (e.g. xs, sm, md, etc), and width - min breakpoint width\r\n */\r\nexport interface NbMediaBreakpoint {\r\n    name: string;\r\n    width: number;\r\n}\r\nexport declare const DEFAULT_MEDIA_BREAKPOINTS: {\r\n    name: string;\r\n    width: number;\r\n}[];\r\n/**\r\n * Manages media breakpoints\r\n *\r\n * Provides access to available media breakpoints to convert window width to a configured breakpoint,\r\n * e.g. 200px - *xs* breakpoint\r\n */\r\nexport declare class NbMediaBreakpointsService {\r\n    private breakpoints;\r\n    private breakpointsMap;\r\n    constructor(breakpoints: any);\r\n    /**\r\n     * Returns a configured breakpoint by width\r\n     * @param width number\r\n     * @returns {Z|{name: string, width: number}}\r\n     */\r\n    getByWidth(width: number): NbMediaBreakpoint;\r\n    /**\r\n     * Returns a configured breakpoint by name\r\n     * @param name string\r\n     * @returns NbMediaBreakpoint\r\n     */\r\n    getByName(name: string): NbMediaBreakpoint;\r\n    /**\r\n     * Returns a list of configured breakpoints for the theme\r\n     * @returns NbMediaBreakpoint[]\r\n     */\r\n    getBreakpoints(): NbMediaBreakpoint[];\r\n    /**\r\n     * Returns a map of configured breakpoints for the theme\r\n     * @returns {[p: string]: number}\r\n     */\r\n    getBreakpointsMap(): {\r\n        [breakpoint: string]: number;\r\n    };\r\n}\r\n"]}