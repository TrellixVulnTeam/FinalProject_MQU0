{"version":3,"file":"js-themes-registry.service.d.ts","sources":["js-themes-registry.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\nimport { NbJSThemeOptions } from './js-themes/theme.options';\r\nexport declare const BUILT_IN_THEMES: NbJSThemeOptions[];\r\n/**\r\n * Js Themes registry - provides access to the JS themes' variables.\r\n * Usually shouldn't be used directly, but through the NbThemeService class methods (getJsTheme).\r\n */\r\nexport declare class NbJSThemesRegistry {\r\n    private themes;\r\n    constructor(builtInThemes: NbJSThemeOptions[], newThemes?: NbJSThemeOptions[]);\r\n    /**\r\n     * Registers a new JS theme\r\n     * @param config any\r\n     * @param themeName string\r\n     * @param baseTheme string\r\n     */\r\n    register(config: any, themeName: string, baseTheme: string): void;\r\n    /**\r\n     * Checks whether the theme is registered\r\n     * @param themeName\r\n     * @returns boolean\r\n     */\r\n    has(themeName: string): boolean;\r\n    /**\r\n     * Return a theme\r\n     * @param themeName\r\n     * @returns NbJSThemeOptions\r\n     */\r\n    get(themeName: string): NbJSThemeOptions;\r\n    private combineByNames;\r\n    private isObject;\r\n    private mergeDeep;\r\n}\r\n"]}