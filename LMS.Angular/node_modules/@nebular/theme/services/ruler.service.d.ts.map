{"version":3,"file":"ruler.service.d.ts","sources":["ruler.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Observable, Subject } from 'rxjs';\r\n/**\r\n * Layout dimensions type\r\n */\r\nexport interface NbLayoutDimensions {\r\n    /**\r\n     * clientWidth\r\n     * @type {number}\r\n     */\r\n    clientWidth: number;\r\n    /**\r\n     * clientHeight\r\n     * @type {number}\r\n     */\r\n    clientHeight: number;\r\n    /**\r\n     * scrollWidth\r\n     * @type {number}\r\n     */\r\n    scrollWidth: number;\r\n    /**\r\n     * scrollHeight\r\n     * @type {number}\r\n     */\r\n    scrollHeight: number;\r\n}\r\n/**\r\n * Simple helper service to return Layout dimensions\r\n * Depending of current Layout scroll mode (default or `withScroll` when scroll is moved to an element\r\n * inside of the layout) corresponding dimensions will be returns  - of `documentElement` in first case and\r\n * `.scrollable-container` in the second.\r\n */\r\nexport declare class NbLayoutRulerService {\r\n    private contentDimensionsReq$;\r\n    /**\r\n     * Content dimensions\r\n     * @returns {Observable<NbLayoutDimensions>}\r\n     */\r\n    getDimensions(): Observable<NbLayoutDimensions>;\r\n    /**\r\n     * @private\r\n     * @returns {Subject<any>}\r\n     */\r\n    onGetDimensions(): Subject<any>;\r\n}\r\n"]}