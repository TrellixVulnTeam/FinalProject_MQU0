{"version":3,"file":"scroll.service.d.ts","sources":["scroll.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Observable, Subject } from 'rxjs';\r\n/**\r\n * Scroll position type\r\n */\r\nexport interface NbScrollPosition {\r\n    /**\r\n     * x - left\r\n     * @type {number}\r\n     */\r\n    x: number;\r\n    /**\r\n     * y - top\r\n     * @type {number}\r\n     */\r\n    y: number;\r\n}\r\n/**\r\n * Layout scroll service. Provides information about current scroll position,\r\n * as well as methods to update position of the scroll.\r\n *\r\n * The reason we added this service is that in Nebular there are two scroll modes:\r\n * - the default mode when scroll is on body\r\n * - and the `withScroll` mode, when scroll is removed from the body and moved to an element inside of the\r\n * `nb-layout` component\r\n */\r\nexport declare class NbLayoutScrollService {\r\n    private scrollPositionReq$;\r\n    private manualScroll$;\r\n    private scroll$;\r\n    private scrollable$;\r\n    /**\r\n     * Returns scroll position\r\n     *\r\n     * @returns {Observable<NbScrollPosition>}\r\n     */\r\n    getPosition(): Observable<NbScrollPosition>;\r\n    /**\r\n     * Sets scroll position\r\n     *\r\n     * @param {number} x\r\n     * @param {number} y\r\n     */\r\n    scrollTo(x?: number, y?: number): void;\r\n    /**\r\n     * Returns a stream of scroll events\r\n     *\r\n     * @returns {Observable<any>}\r\n     */\r\n    onScroll(): Observable<any>;\r\n    /**\r\n     * @private\r\n     * @returns Observable<NbScrollPosition>.\r\n     */\r\n    onManualScroll(): Observable<NbScrollPosition>;\r\n    /**\r\n     * @private\r\n     * @returns {Subject<any>}\r\n     */\r\n    onGetPosition(): Subject<any>;\r\n    onScrollableChange(): Observable<boolean>;\r\n    /**\r\n     * @private\r\n     * @param {any} event\r\n     */\r\n    fireScrollChange(event: any): void;\r\n    scrollable(scrollable: boolean): void;\r\n}\r\n"]}