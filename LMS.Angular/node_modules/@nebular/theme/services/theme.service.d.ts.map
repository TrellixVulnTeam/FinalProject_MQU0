{"version":3,"file":"theme.service.d.ts","sources":["theme.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\nimport { Observable } from 'rxjs';\r\nimport { NbJSThemeOptions } from './js-themes/theme.options';\r\nimport { NbJSThemesRegistry } from './js-themes-registry.service';\r\nimport { NbMediaBreakpointsService, NbMediaBreakpoint } from './breakpoints.service';\r\n/**\r\n * Main Nebular service. Includes various helper methods.\r\n */\r\nexport declare class NbThemeService {\r\n    protected options: any;\r\n    private breakpointService;\r\n    private jsThemesRegistry;\r\n    currentTheme: string;\r\n    private themeChanges$;\r\n    private appendLayoutClass$;\r\n    private removeLayoutClass$;\r\n    private changeWindowWidth$;\r\n    constructor(options: any, breakpointService: NbMediaBreakpointsService, jsThemesRegistry: NbJSThemesRegistry);\r\n    /**\r\n     * Change current application theme\r\n     * @param {string} name\r\n     */\r\n    changeTheme(name: string): void;\r\n    changeWindowWidth(width: number): void;\r\n    /**\r\n     * Returns a theme object with variables (color/paddings/etc) on a theme change.\r\n     * Once subscribed - returns current theme.\r\n     *\r\n     * @returns {Observable<NbJSThemeOptions>}\r\n     */\r\n    getJsTheme(): Observable<NbJSThemeOptions>;\r\n    /**\r\n     * Triggers media query breakpoint change\r\n     * Returns a pair where the first item is previous media breakpoint and the second item is current breakpoit.\r\n     * ```ts\r\n     *  [{ name: 'xs', width: 0 }, { name: 'md', width: 768 }] // change from `xs` to `md`\r\n     * ```\r\n     * @returns {Observable<[NbMediaBreakpoint, NbMediaBreakpoint]>}\r\n     */\r\n    onMediaQueryChange(): Observable<NbMediaBreakpoint[]>;\r\n    /**\r\n     * Triggered when current theme is changed\r\n     * @returns {Observable<any>}\r\n     */\r\n    onThemeChange(): Observable<any>;\r\n    /**\r\n     * Append a class to nb-layout\r\n     * @param {string} className\r\n     */\r\n    appendLayoutClass(className: string): void;\r\n    /**\r\n     * Triggered when a new class is added to nb-layout through `appendLayoutClass` method\r\n     * @returns {Observable<any>}\r\n     */\r\n    onAppendLayoutClass(): Observable<any>;\r\n    /**\r\n     * Removes a class from nb-layout\r\n     * @param {string} className\r\n     */\r\n    removeLayoutClass(className: string): void;\r\n    /**\r\n     * Triggered when a class is removed from nb-layout through `removeLayoutClass` method\r\n     * @returns {Observable<any>}\r\n     */\r\n    onRemoveLayoutClass(): Observable<any>;\r\n}\r\n"]}