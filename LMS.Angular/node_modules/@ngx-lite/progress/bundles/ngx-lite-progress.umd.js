(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('@ngx-lite/progress', ['exports', '@angular/core', '@angular/common'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global['ngx-lite'] = global['ngx-lite'] || {}, global['ngx-lite'].progress = {}), global.ng.core, global.ng.common));
}(this, (function (exports, i0, i1) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () {
                            return e[k];
                        }
                    });
                }
            });
        }
        n['default'] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);

    var NgxProgressBarComponent = /** @class */ (function () {
        function NgxProgressBarComponent() {
            this.value = 0;
            this.showValue = true;
            this.translate = 'translateX(0%)';
        }
        NgxProgressBarComponent.prototype.ngOnChanges = function (changes) {
            this.translate = "translateX(" + changes.value.currentValue + "%)";
        };
        return NgxProgressBarComponent;
    }());
    NgxProgressBarComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.2", ngImport: i0__namespace, type: NgxProgressBarComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    NgxProgressBarComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.2", type: NgxProgressBarComponent, selector: "ngx-progress-bar", inputs: { value: "value", showValue: "showValue" }, usesOnChanges: true, ngImport: i0__namespace, template: "<div class=\"ngx-progress-bar\">\n  <div [style.transform]=\"translate\" class=\"ngx-progress-bar__inner\" role=\"progressbar\" [attr.aria.valuenow]=\"value\" aria-valuemin=\"0\"\n    aria-valuemax=\"100\"></div>\n  <div *ngIf=\"showValue\" class=\"ngx-progress-bar__value\">{{value}}%</div>\n</div>", styles: ["*,:after,:before{box-sizing:border-box}ngx-progress-bar{display:block;--color-bar:#3d3d3d;--color-value:#ccc;--color-inset-background:#f5f5f5;--inner-shadow:inset 0 1px 2px #0000001a}.ngx-progress-bar{width:100%;height:20px;background:#f5f5f5;background:var(--color-inset-background);border-radius:2px;position:relative;overflow:hidden;text-align:center;box-shadow:inset 0 1px 2px #0000001a;box-shadow:var(--inner-shadow);padding:2px;margin-bottom:4px}.ngx-progress-bar__inner{width:100%;height:100%;background:#3d3d3d;background:var(--color-bar);position:absolute;top:0;left:-100%;text-align:center;line-height:35px;font-size:1em;will-change:transform;transition:transform .1s ease-in}.ngx-progress-bar__value{color:#ccc;color:var(--color-value);z-index:2;position:absolute;text-align:center;left:0;right:0;top:-1px}"], directives: [{ type: i1__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush, encapsulation: i0__namespace.ViewEncapsulation.None });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.2", ngImport: i0__namespace, type: NgxProgressBarComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'ngx-progress-bar',
                        templateUrl: './ngx-progress-bar.component.html',
                        styleUrls: ['./ngx-progress-bar.component.scss'],
                        encapsulation: i0.ViewEncapsulation.None,
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], propDecorators: { value: [{
                    type: i0.Input
                }], showValue: [{
                    type: i0.Input
                }] } });

    var NgxProgressCircleComponent = /** @class */ (function () {
        function NgxProgressCircleComponent() {
            this.value = 0;
            this.symbol = '%';
            this.label = 'complete';
            this.valueLabel = '';
            this.radius = 74;
            this.circumference = 2 * Math.PI * this.radius;
            this.dashoffset = 0;
            this.progress(0);
        }
        NgxProgressCircleComponent.prototype.ngOnChanges = function (changes) {
            this.progress(changes.value.currentValue);
        };
        NgxProgressCircleComponent.prototype.progress = function (value) {
            var progress = value / 100;
            this.dashoffset = this.circumference * (1 - progress);
        };
        return NgxProgressCircleComponent;
    }());
    NgxProgressCircleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.2", ngImport: i0__namespace, type: NgxProgressCircleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    NgxProgressCircleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.2", type: NgxProgressCircleComponent, selector: "ngx-progress-circle", inputs: { value: "value", symbol: "symbol", label: "label", valueLabel: "valueLabel" }, usesOnChanges: true, ngImport: i0__namespace, template: "<div class=\"ngx-progress-circle\">\n  <svg class=\"ngx-progress-circle__svg\" width=\"170\" height=\"170\" viewBox=\"0 0 170 170\">\n    <circle class=\"ngx-progress-circle__svg__meter\" cx=\"84\" cy=\"84\" [attr.r]=\"radius\" stroke-width=\"16\" />\n    <circle class=\"ngx-progress-circle__svg__value\" [style.strokeDasharray]=\"circumference\" [style.strokeDashoffset]=\"dashoffset\"\n      cx=\"84\" cy=\"84\" [attr.r]=\"radius\" stroke-width=\"16\" />\n  </svg>\n\n  <div class=\"ngx-progress-circle__value\">\n    <ng-container *ngIf=\"valueLabel !== null\">{{valueLabel}}</ng-container>\n    <ng-container *ngIf=\"valueLabel === null\">{{value}}</ng-container>{{symbol}}\n  </div>\n\n  <div *ngIf=\"!valueLabel\" class=\"ngx-progress-circle__value ng-content\">\n    <ng-content select=\"[icon-value-label]\"></ng-content>\n  </div>\n\n  <div class=\"ngx-progress-circle__complete\">{{label}}</div>\n</div>\n", styles: ["*,:after,:before{box-sizing:border-box}ngx-progress-circle{display:inline-block;--color-stroke:#3d3d3d;--color-circle:#f2f2f2}.ngx-progress-circle{position:relative;width:170px;height:170px;margin:0 auto}.ngx-progress-circle__svg{transform:rotate(-90deg)}.ngx-progress-circle__svg__meter,.ngx-progress-circle__svg__value{fill:none}.ngx-progress-circle__svg__meter{stroke:#f2f2f2;stroke:var(--color-circle)}.ngx-progress-circle__svg__value{stroke:#3d3d3d;stroke:var(--color-stroke);stroke-linecap:round;transition:all}.ngx-progress-circle__value{position:absolute;top:62px;text-align:center;font-size:2.7em;width:100%}.ngx-progress-circle__value.ng-content{top:50px}.ngx-progress-circle__complete{font-size:1.1em;position:absolute;text-align:center;width:100%;top:96px}"], directives: [{ type: i1__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush, encapsulation: i0__namespace.ViewEncapsulation.None });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.2", ngImport: i0__namespace, type: NgxProgressCircleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'ngx-progress-circle',
                        templateUrl: './ngx-progress-circle.component.html',
                        styleUrls: ['./ngx-progress-circle.component.scss'],
                        encapsulation: i0.ViewEncapsulation.None,
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () { return []; }, propDecorators: { value: [{
                    type: i0.Input
                }], symbol: [{
                    type: i0.Input
                }], label: [{
                    type: i0.Input
                }], valueLabel: [{
                    type: i0.Input
                }] } });

    var NgxProgressModule = /** @class */ (function () {
        function NgxProgressModule() {
        }
        return NgxProgressModule;
    }());
    NgxProgressModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.2", ngImport: i0__namespace, type: NgxProgressModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    NgxProgressModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.0.2", ngImport: i0__namespace, type: NgxProgressModule, declarations: [NgxProgressBarComponent, NgxProgressCircleComponent], imports: [i1.CommonModule], exports: [NgxProgressBarComponent, NgxProgressCircleComponent] });
    NgxProgressModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.0.2", ngImport: i0__namespace, type: NgxProgressModule, imports: [[i1.CommonModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.2", ngImport: i0__namespace, type: NgxProgressModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i1.CommonModule],
                        declarations: [NgxProgressBarComponent, NgxProgressCircleComponent],
                        exports: [NgxProgressBarComponent, NgxProgressCircleComponent],
                    }]
            }] });

    /*
     * Public API Surface of ngx-progress
     */

    /**
     * Generated bundle index. Do not edit.
     */

    exports.NgxProgressBarComponent = NgxProgressBarComponent;
    exports.NgxProgressCircleComponent = NgxProgressCircleComponent;
    exports.NgxProgressModule = NgxProgressModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ngx-lite-progress.umd.js.map
