{"version":3,"file":"ngx-lite-progress.umd.js","sources":["../../../projects/ngx-progress/src/ngx-progress-bar/ngx-progress-bar.component.ts","../../../projects/ngx-progress/src/ngx-progress-bar/ngx-progress-bar.component.html","../../../projects/ngx-progress/src/ngx-progress-circle/ngx-progress-circle.component.ts","../../../projects/ngx-progress/src/ngx-progress-circle/ngx-progress-circle.component.html","../../../projects/ngx-progress/src/ngx-progress.module.ts","../../../projects/ngx-progress/src/public_api.ts","../../../projects/ngx-progress/src/ngx-lite-progress.ts"],"sourcesContent":["import {\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n} from '@angular/core';\n\n@Component({\n  selector: 'ngx-progress-bar',\n  templateUrl: './ngx-progress-bar.component.html',\n  styleUrls: ['./ngx-progress-bar.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NgxProgressBarComponent implements OnChanges {\n  @Input() value: number | null = 0;\n  @Input() showValue = true;\n  translate = 'translateX(0%)';\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.translate = `translateX(${changes.value.currentValue}%)`;\n  }\n}\n","<div class=\"ngx-progress-bar\">\n  <div [style.transform]=\"translate\" class=\"ngx-progress-bar__inner\" role=\"progressbar\" [attr.aria.valuenow]=\"value\" aria-valuemin=\"0\"\n    aria-valuemax=\"100\"></div>\n  <div *ngIf=\"showValue\" class=\"ngx-progress-bar__value\">{{value}}%</div>\n</div>","import {\n  Component,\n  Input,\n  SimpleChanges,\n  OnChanges,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n} from '@angular/core';\n\n@Component({\n  selector: 'ngx-progress-circle',\n  templateUrl: './ngx-progress-circle.component.html',\n  styleUrls: ['./ngx-progress-circle.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NgxProgressCircleComponent implements OnChanges {\n  @Input() value: number | null = 0;\n  @Input() symbol = '%';\n  @Input() label = 'complete';\n  @Input() valueLabel = '';\n\n  radius = 74;\n  circumference = 2 * Math.PI * this.radius;\n  dashoffset = 0;\n\n  constructor() {\n    this.progress(0);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.progress(changes.value.currentValue);\n  }\n\n  private progress(value: number) {\n    const progress = value / 100;\n    this.dashoffset = this.circumference * (1 - progress);\n  }\n}\n","<div class=\"ngx-progress-circle\">\n  <svg class=\"ngx-progress-circle__svg\" width=\"170\" height=\"170\" viewBox=\"0 0 170 170\">\n    <circle class=\"ngx-progress-circle__svg__meter\" cx=\"84\" cy=\"84\" [attr.r]=\"radius\" stroke-width=\"16\" />\n    <circle class=\"ngx-progress-circle__svg__value\" [style.strokeDasharray]=\"circumference\" [style.strokeDashoffset]=\"dashoffset\"\n      cx=\"84\" cy=\"84\" [attr.r]=\"radius\" stroke-width=\"16\" />\n  </svg>\n\n  <div class=\"ngx-progress-circle__value\">\n    <ng-container *ngIf=\"valueLabel !== null\">{{valueLabel}}</ng-container>\n    <ng-container *ngIf=\"valueLabel === null\">{{value}}</ng-container>{{symbol}}\n  </div>\n\n  <div *ngIf=\"!valueLabel\" class=\"ngx-progress-circle__value ng-content\">\n    <ng-content select=\"[icon-value-label]\"></ng-content>\n  </div>\n\n  <div class=\"ngx-progress-circle__complete\">{{label}}</div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxProgressBarComponent } from './ngx-progress-bar/ngx-progress-bar.component';\nimport { NgxProgressCircleComponent } from './ngx-progress-circle/ngx-progress-circle.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NgxProgressBarComponent, NgxProgressCircleComponent],\n  exports: [NgxProgressBarComponent, NgxProgressCircleComponent],\n})\nexport class NgxProgressModule {}\n","/*\n * Public API Surface of ngx-progress\n */\n\nexport * from './ngx-progress-bar/ngx-progress-bar.component';\nexport * from './ngx-progress-circle/ngx-progress-circle.component';\nexport * from './ngx-progress.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["Component","ViewEncapsulation","ChangeDetectionStrategy","Input","CommonModule","NgModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QASA;YAQW,UAAK,GAAkB,CAAC,CAAC;YACzB,cAAS,GAAG,IAAI,CAAC;YAC1B,cAAS,GAAG,gBAAgB,CAAC;SAK9B;QAHC,6CAAW,GAAX,UAAY,OAAsB;YAChC,IAAI,CAAC,SAAS,GAAG,gBAAc,OAAO,CAAC,KAAK,CAAC,YAAY,OAAI,CAAC;SAC/D;;;8IAPU,uBAAuB;uHAAvB,uBAAuB,4IChBpC,6SAIM;qHDYO,uBAAuB;sBAPnCA,YAAS;uBAAC;wBACT,QAAQ,EAAE,kBAAkB;wBAC5B,WAAW,EAAE,mCAAmC;wBAChD,SAAS,EAAE,CAAC,mCAAmC,CAAC;wBAChD,aAAa,EAAEC,oBAAiB,CAAC,IAAI;wBACrC,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD;kCAEU,KAAK;0BAAbC,QAAK;oBACG,SAAS;0BAAjBA,QAAK;;;;QEQN;YATS,UAAK,GAAkB,CAAC,CAAC;YACzB,WAAM,GAAG,GAAG,CAAC;YACb,UAAK,GAAG,UAAU,CAAC;YACnB,eAAU,GAAG,EAAE,CAAC;YAEzB,WAAM,GAAG,EAAE,CAAC;YACZ,kBAAa,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;YAC1C,eAAU,GAAG,CAAC,CAAC;YAGb,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SAClB;QAED,gDAAW,GAAX,UAAY,OAAsB;YAChC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;SAC3C;QAEO,6CAAQ,GAAR,UAAS,KAAa;YAC5B,IAAM,QAAQ,GAAG,KAAK,GAAG,GAAG,CAAC;YAC7B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC;SACvD;;;iJArBU,0BAA0B;0HAA1B,0BAA0B,mLChBvC,s5BAkBA;qHDFa,0BAA0B;sBAPtCH,YAAS;uBAAC;wBACT,QAAQ,EAAE,qBAAqB;wBAC/B,WAAW,EAAE,sCAAsC;wBACnD,SAAS,EAAE,CAAC,sCAAsC,CAAC;wBACnD,aAAa,EAAEC,oBAAiB,CAAC,IAAI;wBACrC,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD;8EAEU,KAAK;0BAAbC,QAAK;oBACG,MAAM;0BAAdA,QAAK;oBACG,KAAK;0BAAbA,QAAK;oBACG,UAAU;0BAAlBA,QAAK;;;;QEVR;;;;wIAAa,iBAAiB;yIAAjB,iBAAiB,iBAHb,uBAAuB,EAAE,0BAA0B,aADxDC,eAAY,aAEZ,uBAAuB,EAAE,0BAA0B;yIAElD,iBAAiB,YAJnB,CAACA,eAAY,CAAC;qHAIZ,iBAAiB;sBAL7BC,WAAQ;uBAAC;wBACR,OAAO,EAAE,CAACD,eAAY,CAAC;wBACvB,YAAY,EAAE,CAAC,uBAAuB,EAAE,0BAA0B,CAAC;wBACnE,OAAO,EAAE,CAAC,uBAAuB,EAAE,0BAA0B,CAAC;qBAC/D;;;ICTD;;;;ICAA;;;;;;;;;;;;;;"}