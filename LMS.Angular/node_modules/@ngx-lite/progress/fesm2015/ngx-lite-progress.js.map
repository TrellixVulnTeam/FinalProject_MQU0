{"version":3,"file":"ngx-lite-progress.js","sources":["../../../projects/ngx-progress/src/ngx-progress-bar/ngx-progress-bar.component.ts","../../../projects/ngx-progress/src/ngx-progress-bar/ngx-progress-bar.component.html","../../../projects/ngx-progress/src/ngx-progress-circle/ngx-progress-circle.component.ts","../../../projects/ngx-progress/src/ngx-progress-circle/ngx-progress-circle.component.html","../../../projects/ngx-progress/src/ngx-progress.module.ts","../../../projects/ngx-progress/src/public_api.ts","../../../projects/ngx-progress/src/ngx-lite-progress.ts"],"sourcesContent":["import {\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n} from '@angular/core';\n\n@Component({\n  selector: 'ngx-progress-bar',\n  templateUrl: './ngx-progress-bar.component.html',\n  styleUrls: ['./ngx-progress-bar.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NgxProgressBarComponent implements OnChanges {\n  @Input() value: number | null = 0;\n  @Input() showValue = true;\n  translate = 'translateX(0%)';\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.translate = `translateX(${changes.value.currentValue}%)`;\n  }\n}\n","<div class=\"ngx-progress-bar\">\n  <div [style.transform]=\"translate\" class=\"ngx-progress-bar__inner\" role=\"progressbar\" [attr.aria.valuenow]=\"value\" aria-valuemin=\"0\"\n    aria-valuemax=\"100\"></div>\n  <div *ngIf=\"showValue\" class=\"ngx-progress-bar__value\">{{value}}%</div>\n</div>","import {\n  Component,\n  Input,\n  SimpleChanges,\n  OnChanges,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n} from '@angular/core';\n\n@Component({\n  selector: 'ngx-progress-circle',\n  templateUrl: './ngx-progress-circle.component.html',\n  styleUrls: ['./ngx-progress-circle.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NgxProgressCircleComponent implements OnChanges {\n  @Input() value: number | null = 0;\n  @Input() symbol = '%';\n  @Input() label = 'complete';\n  @Input() valueLabel = '';\n\n  radius = 74;\n  circumference = 2 * Math.PI * this.radius;\n  dashoffset = 0;\n\n  constructor() {\n    this.progress(0);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.progress(changes.value.currentValue);\n  }\n\n  private progress(value: number) {\n    const progress = value / 100;\n    this.dashoffset = this.circumference * (1 - progress);\n  }\n}\n","<div class=\"ngx-progress-circle\">\n  <svg class=\"ngx-progress-circle__svg\" width=\"170\" height=\"170\" viewBox=\"0 0 170 170\">\n    <circle class=\"ngx-progress-circle__svg__meter\" cx=\"84\" cy=\"84\" [attr.r]=\"radius\" stroke-width=\"16\" />\n    <circle class=\"ngx-progress-circle__svg__value\" [style.strokeDasharray]=\"circumference\" [style.strokeDashoffset]=\"dashoffset\"\n      cx=\"84\" cy=\"84\" [attr.r]=\"radius\" stroke-width=\"16\" />\n  </svg>\n\n  <div class=\"ngx-progress-circle__value\">\n    <ng-container *ngIf=\"valueLabel !== null\">{{valueLabel}}</ng-container>\n    <ng-container *ngIf=\"valueLabel === null\">{{value}}</ng-container>{{symbol}}\n  </div>\n\n  <div *ngIf=\"!valueLabel\" class=\"ngx-progress-circle__value ng-content\">\n    <ng-content select=\"[icon-value-label]\"></ng-content>\n  </div>\n\n  <div class=\"ngx-progress-circle__complete\">{{label}}</div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxProgressBarComponent } from './ngx-progress-bar/ngx-progress-bar.component';\nimport { NgxProgressCircleComponent } from './ngx-progress-circle/ngx-progress-circle.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NgxProgressBarComponent, NgxProgressCircleComponent],\n  exports: [NgxProgressBarComponent, NgxProgressCircleComponent],\n})\nexport class NgxProgressModule {}\n","/*\n * Public API Surface of ngx-progress\n */\n\nexport * from './ngx-progress-bar/ngx-progress-bar.component';\nexport * from './ngx-progress-circle/ngx-progress-circle.component';\nexport * from './ngx-progress.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":";;;;;MAgBa,uBAAuB;IAPpC;QAQW,UAAK,GAAkB,CAAC,CAAC;QACzB,cAAS,GAAG,IAAI,CAAC;QAC1B,cAAS,GAAG,gBAAgB,CAAC;KAK9B;IAHC,WAAW,CAAC,OAAsB;QAChC,IAAI,CAAC,SAAS,GAAG,cAAc,OAAO,CAAC,KAAK,CAAC,YAAY,IAAI,CAAC;KAC/D;;oHAPU,uBAAuB;wGAAvB,uBAAuB,iIChBpC,6SAIM;2FDYO,uBAAuB;kBAPnC,SAAS;mBAAC;oBACT,QAAQ,EAAE,kBAAkB;oBAC5B,WAAW,EAAE,mCAAmC;oBAChD,SAAS,EAAE,CAAC,mCAAmC,CAAC;oBAChD,aAAa,EAAE,iBAAiB,CAAC,IAAI;oBACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD;8BAEU,KAAK;sBAAb,KAAK;gBACG,SAAS;sBAAjB,KAAK;;;MEFK,0BAA0B;IAUrC;QATS,UAAK,GAAkB,CAAC,CAAC;QACzB,WAAM,GAAG,GAAG,CAAC;QACb,UAAK,GAAG,UAAU,CAAC;QACnB,eAAU,GAAG,EAAE,CAAC;QAEzB,WAAM,GAAG,EAAE,CAAC;QACZ,kBAAa,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1C,eAAU,GAAG,CAAC,CAAC;QAGb,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;KAClB;IAED,WAAW,CAAC,OAAsB;QAChC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;KAC3C;IAEO,QAAQ,CAAC,KAAa;QAC5B,MAAM,QAAQ,GAAG,KAAK,GAAG,GAAG,CAAC;QAC7B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC;KACvD;;uHArBU,0BAA0B;2GAA1B,0BAA0B,wKChBvC,s5BAkBA;2FDFa,0BAA0B;kBAPtC,SAAS;mBAAC;oBACT,QAAQ,EAAE,qBAAqB;oBAC/B,WAAW,EAAE,sCAAsC;oBACnD,SAAS,EAAE,CAAC,sCAAsC,CAAC;oBACnD,aAAa,EAAE,iBAAiB,CAAC,IAAI;oBACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD;0EAEU,KAAK;sBAAb,KAAK;gBACG,MAAM;sBAAd,KAAK;gBACG,KAAK;sBAAb,KAAK;gBACG,UAAU;sBAAlB,KAAK;;;MEVK,iBAAiB;;8GAAjB,iBAAiB;+GAAjB,iBAAiB,iBAHb,uBAAuB,EAAE,0BAA0B,aADxD,YAAY,aAEZ,uBAAuB,EAAE,0BAA0B;+GAElD,iBAAiB,YAJnB,CAAC,YAAY,CAAC;2FAIZ,iBAAiB;kBAL7B,QAAQ;mBAAC;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,YAAY,EAAE,CAAC,uBAAuB,EAAE,0BAA0B,CAAC;oBACnE,OAAO,EAAE,CAAC,uBAAuB,EAAE,0BAA0B,CAAC;iBAC/D;;;ACTD;;;;ACAA;;;;;;"}