{"version":3,"file":"timepicker-dialog.component.d.ts","sources":["timepicker-dialog.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, DoCheck, TemplateRef } from '@angular/core';\nimport { ClockViewType, ClockMode, IAllowed24HourMap, IAllowed12HourMap } from '../interfaces-and-types';\nimport { twoDigits } from '../util';\nimport { MatTimepickerButtonTemplateContext } from '../timepicker.directive';\nexport declare class MatTimepickerComponentDialogComponent implements DoCheck {\n    data: any;\n    twoDigits: typeof twoDigits;\n    changeEvent: EventEmitter<any>;\n    okClickEvent: EventEmitter<any>;\n    cancelClickEvent: EventEmitter<any>;\n    allowed24HourMap: IAllowed24HourMap;\n    allowed12HourMap: IAllowed12HourMap;\n    invalidSelection: boolean;\n    okLabel: string;\n    cancelLabel: string;\n    okButtonTemplate: TemplateRef<MatTimepickerButtonTemplateContext>;\n    cancelButtonTemplate: TemplateRef<MatTimepickerButtonTemplateContext>;\n    anteMeridiemAbbreviation: string;\n    postMeridiemAbbreviation: string;\n    set value(value: any);\n    get value(): any;\n    mode: ClockMode;\n    viewType: ClockViewType;\n    minutes: any;\n    color: string;\n    isPm: boolean;\n    skipMinuteAutoSwitch: boolean;\n    autoSwitchID: any;\n    invalidMedianID: any;\n    hasInvalidMeridiem: boolean;\n    editHoursClicked: boolean;\n    isClosing: boolean;\n    minDate: Date;\n    maxDate: Date;\n    _formattedHour: any;\n    _hours: any;\n    _value: Date;\n    set hours(value: any);\n    get hours(): any;\n    get formattedHours(): any;\n    bindData(data: any): void;\n    constructor(data: any);\n    ngDoCheck(): void;\n    handleClockChange({ value, type }: {\n        value: number;\n        type: 'minutes' | 'hours';\n    }): void;\n    clearInvalidMeridiem(): void;\n    handleUnavailableSelection(): void;\n    handleClockChangeDone(e: any): void;\n    editHours(): void;\n    editMinutes(): void;\n    invalidSelectionHandler(value: any): void;\n    invalidMeridiem(): void;\n    meridiemChange(hours: any): void;\n    setAm(): void;\n    setPm(): void;\n    okClickHandler: () => void;\n    cancelClickHandler: () => void;\n}\n"]}